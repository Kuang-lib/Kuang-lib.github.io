<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simon&#39;s Blog</title>
  
  <subtitle>Ordinary life , Unwilling to be ordinary code farmers</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kuangyuanbin.cn/"/>
  <updated>2020-02-26T10:07:31.678Z</updated>
  <id>http://kuangyuanbin.cn/</id>
  
  <author>
    <name>Simon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS实现打砖块小游戏</title>
    <link href="http://kuangyuanbin.cn/2020/02/26/JS%E5%AE%9E%E7%8E%B0%E6%89%93%E7%A0%96%E5%9D%97%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    <id>http://kuangyuanbin.cn/2020/02/26/JS%E5%AE%9E%E7%8E%B0%E6%89%93%E7%A0%96%E5%9D%97%E5%B0%8F%E6%B8%B8%E6%88%8F/</id>
    <published>2020-02-26T08:33:01.000Z</published>
    <updated>2020-02-26T10:07:31.678Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-画背景，画小球和挡板"><a href="#1-画背景，画小球和挡板" class="headerlink" title="1.画背景，画小球和挡板"></a>1.画背景，画小球和挡板</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义画布 及画笔</span></span><br><span class="line"><span class="keyword">var</span> canvas,context;</span><br><span class="line"><span class="comment">//定义画布的大小</span></span><br><span class="line"><span class="keyword">var</span> cW=<span class="number">1024</span>,cH=<span class="number">768</span>;</span><br><span class="line"><span class="comment">//定义背景 小球 挡板</span></span><br><span class="line"><span class="keyword">var</span> bg,ball,board;</span><br><span class="line"><span class="comment">//定义挡板的坐标 及 宽高</span></span><br><span class="line"><span class="keyword">var</span> boardX=<span class="number">400</span>,boardY=<span class="number">700</span>,boardW=<span class="number">126</span>,boardH=<span class="number">9</span>;</span><br><span class="line"><span class="comment">//定义小球的坐标 及宽高</span></span><br><span class="line"><span class="keyword">var</span> ballX=<span class="number">400</span>,ballY=<span class="number">630</span>,ballWH=<span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">canvas=<span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>);</span><br><span class="line">context=canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"></span><br><span class="line">bg=getImage(<span class="string">"img/bg2.png"</span>);</span><br><span class="line">board=getImage(<span class="string">"img/board.png"</span>);</span><br><span class="line">ball=getImage(<span class="string">"img/ball.png"</span>);</span><br><span class="line"></span><br><span class="line">context.drawImage(bg,<span class="number">0</span>,<span class="number">0</span>,cW,cH); <span class="comment">//画背景</span></span><br><span class="line">context.drawImage(board,boardX,boardY,boardW,boardH);<span class="comment">//画挡板</span></span><br><span class="line">context.drawImage(ball,ballX,ballY,ballWH,ballWH);<span class="comment">//画小球</span></span><br></pre></td></tr></table></figure></div><ul><li>获取图片对象</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getImage</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> img=<span class="keyword">new</span> Image();</span><br><span class="line">img.src=obj;</span><br><span class="line"><span class="keyword">return</span> img;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="2-让小球移动"><a href="#2-让小球移动" class="headerlink" title="2.让小球移动"></a>2.让小球移动</h3><ul><li><p>在定时器中，改变小球的x,y坐标，就能让小球动起来</p></li><li><p>碰到左右的墙壁时，将vx值取反，就有反弹的效果</p><p>同理，碰到上下的板子时，将vy值取反</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义小球的左右加速度</span></span><br><span class="line"><span class="keyword">var</span> vx=<span class="number">5</span>,vy=<span class="number">-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateBall</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">ballX+=vx;</span><br><span class="line">ballY+=vy;</span><br><span class="line"><span class="keyword">if</span>(ballX&gt;cW-ballWH)&#123;</span><br><span class="line">ballX=cW-ballWH;</span><br><span class="line">vx*=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ballX&lt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ballX=<span class="number">0</span>;</span><br><span class="line">vx*=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ballY&lt;<span class="number">90</span>)&#123;</span><br><span class="line">ballY=<span class="number">90</span>;</span><br><span class="line">vy*=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ballY&gt;boardY)&#123;</span><br><span class="line">vy*=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">context.drawImage(ball,ballX,ballY,ballWH,ballWH);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="3-让挡板跟随鼠标移动"><a href="#3-让挡板跟随鼠标移动" class="headerlink" title="3.让挡板跟随鼠标移动"></a>3.让挡板跟随鼠标移动</h3><ul><li>给画布添加鼠标移动事件，让挡板的x坐标值等于鼠标当前相对于body的x坐标减去挡板长度的一半（让挡板中心随鼠标移动）</li><li>鼠标超出边界值时，让挡板x坐标等于边界值</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">canvas.onmousemove=onMouseMoveHandler;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onMouseMoveHandler</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> ev=e||<span class="built_in">window</span>.event;</span><br><span class="line">boardX=ev.offsetX-boardW/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(boardX&lt;<span class="number">0</span>)&#123;</span><br><span class="line">boardX=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(boardX&gt;cW-boardW)&#123;</span><br><span class="line">boardX=cW-boardW;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="4-画砖块"><a href="#4-画砖块" class="headerlink" title="4.画砖块"></a>4.画砖块</h3><ul><li>bricks[]用来存储砖块</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//砖块数组</span></span><br><span class="line"><span class="keyword">var</span> bricks=[];</span><br><span class="line"><span class="comment">//砖块对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Brick</span>(<span class="params">i,j</span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.w=<span class="number">198</span>;</span><br><span class="line"><span class="keyword">this</span>.h=<span class="number">76</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.x=<span class="number">15</span>+(<span class="keyword">this</span>.w+<span class="number">2</span>)*j;</span><br><span class="line"><span class="keyword">this</span>.y=<span class="number">90</span>+(<span class="keyword">this</span>.h+<span class="number">2</span>)*i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.img=getImage(<span class="string">"img/"</span>+(<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*<span class="number">5</span>+<span class="number">4</span>))+<span class="string">".png"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.drawBrick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">context.drawImage(<span class="keyword">this</span>.img,<span class="keyword">this</span>.x,<span class="keyword">this</span>.y,<span class="keyword">this</span>.w,<span class="keyword">this</span>.h);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化砖块：将4X5的砖块对象放进数组中</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createBricks</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> brick=<span class="keyword">new</span> Brick(i,j);</span><br><span class="line">bricks.push(brick);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//画出砖块</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateBricks</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;bricks.length;i++)&#123;</span><br><span class="line"><span class="keyword">var</span> brick=bricks[i];</span><br><span class="line">brick.drawBrick();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="5-碰撞检测"><a href="#5-碰撞检测" class="headerlink" title="5.碰撞检测"></a>5.碰撞检测</h3><ul><li><p>小球与挡板的碰撞检测</p><p>能碰撞上的区域可以看作一个矩形，</p><p>小球碰撞最小x坐标：挡板x坐标-小球宽度（球在板左侧切面）</p><p>小球碰撞最大x坐标：挡板x坐标+小球宽度（球在板右侧切面）</p><p>小球碰撞最小y坐标：挡板y坐标-小球高度（球在板上方切面）</p><p>小球碰撞最大y坐标：挡板y坐标+挡板高度/2-小球高度/2（球在板侧方切面）</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ballAndBoard</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(hit(ballX,ballY,boardX-ballWH,boardY-ballWH,boardX+boardW,boardY+boardH/<span class="number">2</span>-ballWH/<span class="number">2</span>))&#123;</span><br><span class="line">ballY=boardY-ballWH<span class="number">-3</span>;</span><br><span class="line">vy*=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//x,y小球的坐标 minx,miny碰撞最小x,y坐标 maxx,maxy碰撞的最大x,y坐标</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hit</span>(<span class="params">x,y,minx,miny,maxx,maxy</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&gt;=minx&amp;&amp;x&lt;=maxx&amp;&amp;y&gt;=miny&amp;&amp;y&lt;=maxy)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="6游戏定时器"><a href="#6游戏定时器" class="headerlink" title="6游戏定时器"></a>6游戏定时器</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    context.clearRect(<span class="number">0</span>,<span class="number">0</span>,cW,cH);<span class="comment">//清空画布</span></span><br><span class="line">    context.drawImage(bg,<span class="number">0</span>,<span class="number">0</span>,cW,cH);</span><br><span class="line">    context.drawImage(board,boardX,boardY,boardW,boardH);</span><br><span class="line">    <span class="comment">//更新小球</span></span><br><span class="line">    updateBall();</span><br><span class="line">    <span class="comment">//更新砖块</span></span><br><span class="line">    updateBricks();</span><br><span class="line">    <span class="comment">//小球与挡板的碰撞</span></span><br><span class="line">    ballAndBoard();</span><br><span class="line">&#125;,<span class="number">30</span>)</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-画背景，画小球和挡板&quot;&gt;&lt;a href=&quot;#1-画背景，画小球和挡板&quot; class=&quot;headerlink&quot; title=&quot;1.画背景，画小球和挡板&quot;&gt;&lt;/a&gt;1.画背景，画小球和挡板&lt;/h3&gt;&lt;div class=&quot;highlight-wrap&quot;autoco
      
    
    </summary>
    
    
      <category term="H5" scheme="http://kuangyuanbin.cn/categories/H5/"/>
    
      <category term="JavaScript" scheme="http://kuangyuanbin.cn/categories/H5/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://kuangyuanbin.cn/tags/JavaScript/"/>
    
      <category term="H5实训(软件过程管理)" scheme="http://kuangyuanbin.cn/tags/H5%E5%AE%9E%E8%AE%AD-%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    
      <category term="游戏" scheme="http://kuangyuanbin.cn/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS实现俄罗斯方块</title>
    <link href="http://kuangyuanbin.cn/2020/02/23/JS%E5%AE%9E%E7%8E%B0%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/"/>
    <id>http://kuangyuanbin.cn/2020/02/23/JS%E5%AE%9E%E7%8E%B0%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/</id>
    <published>2020-02-23T01:52:52.000Z</published>
    <updated>2020-02-25T10:42:39.059Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JS部分"><a href="#JS部分" class="headerlink" title="JS部分"></a>JS部分</h2><h4 id="1-设置游戏画布的大小，并将网格画出"><a href="#1-设置游戏画布的大小，并将网格画出" class="headerlink" title="1.设置游戏画布的大小，并将网格画出"></a>1.设置游戏画布的大小，并将网格画出</h4><ul><li>画布大小：长度为格子大小的10倍，宽度为格子大小的20倍（+3是因为画线时设置了线条宽度为2）x</li><li>画网格：横线21条竖线11条，横线的y值是一样的，竖线的x值是一样的</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取游戏画布及画笔</span></span><br><span class="line"><span class="keyword">var</span> gameCanvas = <span class="built_in">document</span>.getElementById(<span class="string">"gameCanvas"</span>);</span><br><span class="line"><span class="keyword">var</span> gameContext = gameCanvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"><span class="comment">//定义每个格的大小</span></span><br><span class="line"><span class="keyword">var</span> blockSize = <span class="built_in">window</span>.innerWidth*<span class="number">0.6</span>/<span class="number">10</span>;</span><br><span class="line"><span class="comment">//设置画布的大小</span></span><br><span class="line">gameCanvas.width = blockSize*<span class="number">10</span>+<span class="number">3</span>;</span><br><span class="line">gameCanvas.height = blockSize*<span class="number">20</span>+<span class="number">3</span>;</span><br><span class="line"><span class="comment">//画网格</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawLine</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//画横线</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">21</span>; i++)&#123;</span><br><span class="line">        gameContext.beginPath();</span><br><span class="line">        gameContext.strokeStyle = <span class="string">"white"</span>;</span><br><span class="line">        gameContext.lineWidth = <span class="number">2</span>;</span><br><span class="line">        gameContext.moveTo(<span class="number">0.5</span>,blockSize*i+<span class="number">0.5</span>);</span><br><span class="line">        gameContext.lineTo(blockSize*<span class="number">10</span>+<span class="number">0.5</span>,blockSize*i+<span class="number">0.5</span>);</span><br><span class="line">        gameContext.stroke();</span><br><span class="line">        gameContext.closePath();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//画竖线</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">11</span>; i++)&#123;</span><br><span class="line">        gameContext.beginPath();</span><br><span class="line">        gameContext.strokeStyle = <span class="string">"white"</span>;</span><br><span class="line">        gameContext.lineWidth = <span class="number">2</span>;</span><br><span class="line">        gameContext.moveTo(blockSize*i+<span class="number">0.5</span>,<span class="number">0.5</span>);</span><br><span class="line">        gameContext.lineTo(blockSize*i+<span class="number">0.5</span>,blockSize*<span class="number">20</span>+<span class="number">0.5</span>);</span><br><span class="line">        gameContext.stroke();</span><br><span class="line">        gameContext.closePath();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="2-画方块"><a href="#2-画方块" class="headerlink" title="2.画方块"></a>2.画方块</h4><ul><li><p>首先定义方块形状数组：有7种方块，可以用二维数组来表示</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> layouts = [</span><br><span class="line">[</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">]</span><br><span class="line">];</span><br></pre></td></tr></table></figure></div></li><li><p>获取图片对象</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getImage</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">    img.src = <span class="string">"img/blocks1.png"</span>;</span><br><span class="line">    <span class="keyword">return</span> img;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li><li><p>画初始方块（网格中的）</p><ul><li><p>drawImage（）参数解析</p><p>图片对象this.img，截取的位置this.color<em>20,0（因为有7种方块，所以横坐标为0-6的随机整数），截取大小20,20，画的初始位置(this.currentX+j)</em>blockSize,(this.currentY+i)*blockSize，画的大小blockSize,blockSize</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Shape</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//定义画的初始位置</span></span><br><span class="line"><span class="keyword">this</span>.currentX = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">this</span>.currentY = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//图片对象</span></span><br><span class="line"><span class="keyword">this</span>.img = getImage();</span><br><span class="line"><span class="comment">//方块的颜色</span></span><br><span class="line"><span class="keyword">this</span>.color = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">7</span>);</span><br><span class="line"><span class="comment">//方块的形状</span></span><br><span class="line"><span class="keyword">this</span>.layout = layouts[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">7</span>)];</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 2 [</span></span><br><span class="line"><span class="comment"> *[0,1,0],</span></span><br><span class="line"><span class="comment"> *[1,1,1]</span></span><br><span class="line"><span class="comment"> *],</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">this</span>.drawShape = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//循环行</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="keyword">this</span>.layout.length; i++) &#123;</span><br><span class="line"><span class="comment">//循环列</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;<span class="keyword">this</span>.layout[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.layout[i][j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">gameContext.drawImage(<span class="keyword">this</span>.img,<span class="keyword">this</span>.color*<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">20</span>,(<span class="keyword">this</span>.currentX+j)*blockSize,(<span class="keyword">this</span>.currentY+i)*blockSize,blockSize,blockSize);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li><p>初始化方块:使用onload方法，加载页面后即显示出来 </p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化方块</span></span><br><span class="line">shape = <span class="keyword">new</span> Shape();</span><br><span class="line">shape.img.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    shape.drawShape();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li><li><p>画下一次显示的方块（左上角）：类似上面画方块的方法</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下一次显示的方块</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NextShape</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.img = getImage();</span><br><span class="line">    <span class="keyword">this</span>.updateFrame = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.color = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">7</span>);</span><br><span class="line">        <span class="keyword">this</span>.layout = layouts[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">7</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.drawNextShape = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//循环行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="keyword">this</span>.layout.length; i++) &#123;</span><br><span class="line">            <span class="comment">//循环列</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;<span class="keyword">this</span>.layout[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.layout[i][j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    nextContext.drawImage(<span class="keyword">this</span>.img,<span class="keyword">this</span>.color*<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">20</span>,j*blockSize,i*blockSize,blockSize,blockSize);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化下一次显示的方块</span></span><br><span class="line">nextShape = <span class="keyword">new</span> NextShape();</span><br><span class="line">nextShape.img.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    nextShape.updateFrame();</span><br><span class="line">    nextShape.drawNextShape();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="3-游戏定时器"><a href="#3-游戏定时器" class="headerlink" title="3.游戏定时器"></a>3.游戏定时器</h4><ul><li>isMove（）判断是否能继续下落，可以则方块的currentY+1，不可以则将不再移动的方块添加到数组中，并画出下一个方块</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//游戏的定时器</span></span><br><span class="line"><span class="comment">//当函数作为回调函数时，不需要加（） 加（）代表立即执行</span></span><br><span class="line"><span class="comment">//非加（） “方法名（）”</span></span><br><span class="line">timer = setInterval(move,<span class="number">500</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏移动</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (isMove(<span class="number">0</span>,<span class="number">1</span>)) &#123;</span><br><span class="line">        shape.currentY += <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//将不再移动的方块添加到数组中</span></span><br><span class="line">        pushShapeToList();</span><br><span class="line"><span class="comment">//清除list种被填满的一行</span></span><br><span class="line">clearList();</span><br><span class="line">        </span><br><span class="line">        shape.currentX = <span class="number">3</span>;</span><br><span class="line">        shape.currentY = <span class="number">0</span>;</span><br><span class="line">        shape.color = nextShape.color;</span><br><span class="line">        shape.layout = nextShape.layout;</span><br><span class="line"></span><br><span class="line">        nextShape.updateFrame();</span><br><span class="line">        nextContext.clearRect(<span class="number">0</span>,<span class="number">0</span>,nextCanvas.width,nextCanvas.height);</span><br><span class="line">        nextShape.drawNextShape();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//更新游戏画布</span></span><br><span class="line">    updateGameCanvas();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li><p>方块移动判断：</p><ul><li>方块触底可以用y值与（20-shape.layout.length）作比较</li><li>方块触墙可以用x值与（10-shape.layout[0].length）作比较</li><li>方块与方块之间是否碰撞用现在移动的方块下一次移动的坐标值与网格二维数组保存的数值对比</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方块移动判断</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isMove</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> nextY = shape.currentY + y;</span><br><span class="line">    <span class="keyword">var</span> nextX = shape.currentX + x;</span><br><span class="line">    <span class="keyword">if</span>(nextY &gt; <span class="number">20</span>-shape.layout.length)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(nextX&lt;<span class="number">0</span> || nextX&gt;<span class="number">10</span>-shape.layout[<span class="number">0</span>].length)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方块与方块之间</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;shape.layout.length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;shape.layout[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(shape.layout[i][j]&gt;<span class="number">0</span> &amp;&amp; list[nextY+i][nextX+j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li><li><p>更新游戏画布：做四个操作：清空游戏画布，画网格，画初始方块，画list即不再移动的方块</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新游戏画布</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateGameCanvas</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    gameContext.clearRect(<span class="number">0</span>,<span class="number">0</span>,gameCanvas.width,gameCanvas.height);</span><br><span class="line">    drawLine();</span><br><span class="line">    shape.drawShape();</span><br><span class="line">    drawList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li></ul><h4 id="4-保存不在移动的方块"><a href="#4-保存不在移动的方块" class="headerlink" title="4.保存不在移动的方块"></a>4.保存不在移动的方块</h4><ul><li>初始化存储不在移动的方块数组：即将整个网格用一个二维数组表示，每个格初始值都为0</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化存储不在移动的俄罗斯方块数组</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//i 循环行</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">20</span>; i++) &#123;</span><br><span class="line">        list[i] = [];</span><br><span class="line">        <span class="comment">//j循环列</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;<span class="number">10</span>; j++) &#123;</span><br><span class="line">            list[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li>将不再移动的方块添加到数组中：将颜色数值化，color+1代表方块颜色的数值</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将不再移动的方块添加到数组中</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pushShapeToList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//循环行</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;shape.layout.length; i++) &#123;</span><br><span class="line">        <span class="comment">//循环列</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;shape.layout[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(shape.layout[i][j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                list[shape.currentY+i][shape.currentX+j] = shape.color + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li><p>画list：及将网格二维数组的值对应的方块显示出来</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;list.length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;list[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(list[i][j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                gameContext.drawImage(shape.img,(list[i][j]<span class="number">-1</span>)*<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">20</span>,blockSize*j,blockSize*i,blockSize,blockSize);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li></ul><h4 id="5-图片按钮的点击事件"><a href="#5-图片按钮的点击事件" class="headerlink" title="5.图片按钮的点击事件"></a>5.图片按钮的点击事件</h4><ul><li>先获取所有图片 ，遍历图片，为每张图片添加点击事件</li><li>暂停：改变isStart值，切换图片，清除定时器；播放：改变isStart值，切换图片，设置定时器</li><li>加速：让正在下落的方块的currentY+1</li><li>向左：让正在下落的方块的currentX-1</li><li>向右：让正在下落的方块的currentX+1</li><li>变形：lay[]储存变形后的数组，注意变形后的方块是否会超出边界以及与list中方块重叠的问题，超出边界则改变x,y的坐标值，重叠方块则让其无法变形</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//图片按钮的点击</span></span><br><span class="line"><span class="keyword">var</span> imgs = <span class="built_in">document</span>.querySelectorAll(<span class="string">"img"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;imgs.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> img = imgs[i];</span><br><span class="line">    <span class="comment">//index 自定义属性</span></span><br><span class="line">    img.index = i;</span><br><span class="line">    img.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        keyAndDown(<span class="keyword">this</span>.index);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//控制移动或变形</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">keyAndDown</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (obj)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"变形"</span>);</span><br><span class="line">            <span class="comment">//变形后的数组</span></span><br><span class="line">            <span class="keyword">var</span> lay = [];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;shape.layout[<span class="number">0</span>].length; j++) &#123;</span><br><span class="line">                lay[j] = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;shape.layout.length; i++) &#123;</span><br><span class="line">                    lay[j][i] = shape.layout[shape.layout.length-i<span class="number">-1</span>][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//记录变形后 的偏移量</span></span><br><span class="line">            <span class="keyword">var</span> offsetX = shape.currentX + lay[<span class="number">0</span>].length;</span><br><span class="line">            <span class="keyword">var</span> offsetY = shape.currentY + lay.length;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//记录真实的x,y坐标</span></span><br><span class="line">            <span class="keyword">var</span> xZuoBiao = shape.currentX;</span><br><span class="line">            <span class="keyword">var</span> yZuoBiao = shape.currentY;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (offsetX &gt; <span class="number">10</span>) &#123;</span><br><span class="line">                xZuoBiao = <span class="number">10</span> -lay[<span class="number">0</span>].length;</span><br><span class="line">                <span class="comment">//return;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (offsetY &gt; <span class="number">20</span>) &#123;</span><br><span class="line">                yZuoBiao = <span class="number">20</span> -lay.length;</span><br><span class="line">                <span class="comment">//return;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//判断变形后的方块与list种方块的重叠</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;lay.length; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;lay[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (lay[i][j]&gt;<span class="number">0</span> &amp;&amp; list[yZuoBiao+i][xZuoBiao+j]&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            shape.currentX = xZuoBiao;</span><br><span class="line">            shape.currentY = yZuoBiao;</span><br><span class="line">            shape.layout = lay;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">if</span>(isStart)&#123;</span><br><span class="line">                <span class="keyword">switch</span> (obj)&#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">"变形"</span>);</span><br><span class="line">                        <span class="comment">//变形后的数组</span></span><br><span class="line">                        <span class="keyword">var</span> lay = [];</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">"加速"</span>);</span><br><span class="line">                        <span class="keyword">if</span>(isMove(<span class="number">0</span>,<span class="number">1</span>))&#123;</span><br><span class="line">                            shape.currentY +=<span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">"向左"</span>);</span><br><span class="line">                        <span class="keyword">if</span>(isMove(<span class="number">-1</span>,<span class="number">0</span>))&#123;</span><br><span class="line">                            shape.currentX -=<span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">"向右"</span>);</span><br><span class="line">                        <span class="keyword">if</span>(isMove(<span class="number">1</span>,<span class="number">0</span>))&#123;</span><br><span class="line">                            shape.currentX +=<span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="6-清除方块并计算和显示分数"><a href="#6-清除方块并计算和显示分数" class="headerlink" title="6.清除方块并计算和显示分数"></a>6.清除方块并计算和显示分数</h4><ul><li>首先，从最底下那一行开始，判断网格二维数组list中是否有整行都不为0（即可清除的行），变量flag为true</li><li>然后，从可清除的那行开始，依次把上一行的数值往下一行移，并将最上面一行的数值置为0，变量n记录一次性清除的行数，用于计算分数</li><li>最后计算分数并显示出来，分数计算的方式 ：100*2^n，n表示一次性清除的行数</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清除list中被填满的一行</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clearList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=list.length<span class="number">-1</span>; i&gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="comment">//假设当前行可以清除</span></span><br><span class="line">        <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;list[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(list[i][j] == <span class="number">0</span>)&#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="comment">//该行可被清除</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> x=i;x&gt;<span class="number">0</span>;x--) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> y=<span class="number">0</span>;y&lt;list[<span class="number">0</span>].length;y++) &#123;</span><br><span class="line">                    list[x][y] = list[x<span class="number">-1</span>][y];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//最上面那行清零</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> g=<span class="number">0</span>;g&lt;list[<span class="number">0</span>].length;g++) &#123;</span><br><span class="line">                list[<span class="number">0</span>][g] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            n += <span class="number">1</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        num += <span class="number">100</span>*<span class="built_in">Math</span>.pow(<span class="number">2</span>,n);</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"score"</span>).innerText = <span class="string">"得分："</span> + num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>完整代码：</strong></p><p>index.html</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">*&#123;</span><br><span class="line">margin: 0;</span><br><span class="line">padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">body&#123;</span><br><span class="line">background: url(img/bg2.jpg);</span><br><span class="line">background-size: 100%;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#gameCanvas</span>&#123;</span></span><br><span class="line">position: absolute;</span><br><span class="line">top: 0;</span><br><span class="line">left: 0;</span><br><span class="line">right: 0;</span><br><span class="line">bottom: 0;</span><br><span class="line">margin: auto;</span><br><span class="line">/*width: 200px;</span><br><span class="line">height: 400px;*/</span><br><span class="line"><span class="css"><span class="comment">/*background-color: tan;*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#nextCanvas</span>&#123;</span></span><br><span class="line">position: absolute;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line">left: 20px;</span><br><span class="line">/*width: 100px;</span><br><span class="line">height: 50px;*/</span><br><span class="line">background-color: tan;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#score</span>&#123;</span></span><br><span class="line">position: absolute;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line">left: 0;</span><br><span class="line">width: 100%;</span><br><span class="line">height: 50px;</span><br><span class="line">text-align: center;</span><br><span class="line">line-height: 50px;</span><br><span class="line">color: white;</span><br><span class="line">&#125;</span><br><span class="line">img&#123;</span><br><span class="line">position: absolute;</span><br><span class="line">width: 50px;</span><br><span class="line">height: 50px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="comment">/*查找第n（1开始的整数）个子元素 并且标签名为img的子标签*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line">right: 20px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">left</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line">bottom: 150px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(6)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">right</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line">bottom: 150px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(7)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">left</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line">bottom: 50px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-pseudo">:nth-child(8)</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">right</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line">bottom: 50px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"gameCanvas"</span> <span class="attr">width</span>=<span class="string">""</span> <span class="attr">height</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"nextCanvas"</span> <span class="attr">width</span>=<span class="string">""</span> <span class="attr">height</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"score"</span>&gt;</span>得分:0<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/zanting.png"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/bianxing.png"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/jiasu.png"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/xiangzuo.png"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/xiangyou.png"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/main.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>main.js:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方块形状数组</span></span><br><span class="line"><span class="keyword">var</span> layouts = [</span><br><span class="line">[</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取游戏画布及画笔</span></span><br><span class="line"><span class="keyword">var</span> gameCanvas = <span class="built_in">document</span>.getElementById(<span class="string">"gameCanvas"</span>);</span><br><span class="line"><span class="keyword">var</span> gameContext = gameCanvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"><span class="comment">//获取下一次方块 的画布及画笔</span></span><br><span class="line"><span class="keyword">var</span> nextCanvas = <span class="built_in">document</span>.getElementById(<span class="string">"nextCanvas"</span>);</span><br><span class="line"><span class="keyword">var</span> nextContext = nextCanvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"><span class="comment">//定义每个格的大小</span></span><br><span class="line"><span class="keyword">var</span> blockSize = <span class="built_in">window</span>.innerWidth*<span class="number">0.6</span>/<span class="number">10</span>;</span><br><span class="line"><span class="comment">//定义方块</span></span><br><span class="line"><span class="keyword">var</span> shape;</span><br><span class="line"><span class="comment">//定义下一次显示的方块</span></span><br><span class="line"><span class="keyword">var</span> nextShape;</span><br><span class="line"><span class="comment">//定义存储不在移动的俄罗斯方块数组</span></span><br><span class="line"><span class="keyword">var</span> list = [];</span><br><span class="line"><span class="comment">//判断游戏暂停继续的Boolean</span></span><br><span class="line"><span class="keyword">var</span> isStart = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//定时器</span></span><br><span class="line"><span class="keyword">var</span> timer;</span><br><span class="line"><span class="comment">//记录分数</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">//设置画布的大小</span></span><br><span class="line">gameCanvas.width = blockSize*<span class="number">10</span>+<span class="number">3</span>;</span><br><span class="line">gameCanvas.height = blockSize*<span class="number">20</span>+<span class="number">3</span>;</span><br><span class="line">nextCanvas.width = blockSize*<span class="number">4</span>;</span><br><span class="line">nextCanvas.height = blockSize*<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画网格</span></span><br><span class="line">drawLine();</span><br><span class="line"><span class="comment">//初始化存储不在移动的俄罗斯方块数组</span></span><br><span class="line">createList();</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化方块</span></span><br><span class="line">shape = <span class="keyword">new</span> Shape();</span><br><span class="line">shape.img.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">shape.drawShape();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化下一次显示的方块</span></span><br><span class="line">nextShape = <span class="keyword">new</span> NextShape();</span><br><span class="line">nextShape.img.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">nextShape.updateFrame();</span><br><span class="line">nextShape.drawNextShape();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图片按钮的点击</span></span><br><span class="line"><span class="keyword">var</span> imgs = <span class="built_in">document</span>.querySelectorAll(<span class="string">"img"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;imgs.length; i++) &#123;</span><br><span class="line"><span class="keyword">var</span> img = imgs[i];</span><br><span class="line"><span class="comment">//index 自定义属性</span></span><br><span class="line">img.index = i;</span><br><span class="line">img.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">keyAndDown(<span class="keyword">this</span>.index);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化存储不在移动的俄罗斯方块数组</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//i 循环行</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">20</span>; i++) &#123;</span><br><span class="line">list[i] = [];</span><br><span class="line"><span class="comment">//j循环列</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;<span class="number">10</span>; j++) &#123;</span><br><span class="line">list[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//console.log(list);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏的定时器</span></span><br><span class="line"><span class="comment">//当函数作为回调函数时，不需要加（） 加（）代表立即执行</span></span><br><span class="line"><span class="comment">//非加（） “方法名（）”</span></span><br><span class="line">timer = setInterval(move,<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏移动</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (isMove(<span class="number">0</span>,<span class="number">1</span>)) &#123;</span><br><span class="line">shape.currentY += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//将不再移动的方块添加到数组中</span></span><br><span class="line">pushShapeToList();</span><br><span class="line"><span class="comment">//清除list种被填满的一行</span></span><br><span class="line">clearList();</span><br><span class="line"></span><br><span class="line">shape.currentX = <span class="number">3</span>;</span><br><span class="line">shape.currentY = <span class="number">0</span>;</span><br><span class="line">shape.color = nextShape.color;</span><br><span class="line">shape.layout = nextShape.layout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;shape.layout.length; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;shape.layout[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(shape.layout[i][j]&gt;<span class="number">0</span>&amp;&amp;list[shape.currentY+i][shape.currentX+j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">window</span>.location.reload();<span class="comment">//重新加载页面</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">nextShape.updateFrame();</span><br><span class="line">nextContext.clearRect(<span class="number">0</span>,<span class="number">0</span>,nextCanvas.width,nextCanvas.height);</span><br><span class="line">nextShape.drawNextShape();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//更新游戏画布</span></span><br><span class="line">updateGameCanvas();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将不再移动的方块添加到数组中</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pushShapeToList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//循环行</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;shape.layout.length; i++) &#123;</span><br><span class="line"><span class="comment">//循环列</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;shape.layout[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(shape.layout[i][j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">list[shape.currentY+i][shape.currentX+j] = shape.color + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//console.log(list);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清除list中被填满的一行</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clearList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=list.length<span class="number">-1</span>; i&gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line"><span class="comment">//假设当前行可以清除</span></span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;list[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(list[i][j] == <span class="number">0</span>)&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line"><span class="comment">//该行可被清除</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x=i;x&gt;<span class="number">0</span>;x--) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> y=<span class="number">0</span>;y&lt;list[<span class="number">0</span>].length;y++) &#123;</span><br><span class="line">list[x][y] = list[x<span class="number">-1</span>][y];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最上面那行清零</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> g=<span class="number">0</span>;g&lt;list[<span class="number">0</span>].length;g++) &#123;</span><br><span class="line">list[<span class="number">0</span>][g] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">n += <span class="number">1</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (n&gt;<span class="number">0</span>) &#123;</span><br><span class="line">num += <span class="number">100</span>*<span class="built_in">Math</span>.pow(<span class="number">2</span>,n);</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"score"</span>).innerText = <span class="string">"得分："</span> + num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//画list</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;list.length; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;list[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(list[i][j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">gameContext.drawImage(shape.img,(list[i][j]<span class="number">-1</span>)*<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">20</span>,blockSize*j,blockSize*i,blockSize,blockSize);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方块移动判断</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isMove</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> nextY = shape.currentY + y;</span><br><span class="line"><span class="keyword">var</span> nextX = shape.currentX + x;</span><br><span class="line"><span class="keyword">if</span>(nextY &gt; <span class="number">20</span>-shape.layout.length)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(nextX&lt;<span class="number">0</span> || nextX&gt;<span class="number">10</span>-shape.layout[<span class="number">0</span>].length)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//方块与方块之间</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;shape.layout.length; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;shape.layout[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(shape.layout[i][j]&gt;<span class="number">0</span> &amp;&amp; list[nextY+i][nextX+j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新游戏画布</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateGameCanvas</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">gameContext.clearRect(<span class="number">0</span>,<span class="number">0</span>,gameCanvas.width,gameCanvas.height);</span><br><span class="line">drawLine();</span><br><span class="line">shape.drawShape();</span><br><span class="line">drawList();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下一次显示的方块</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NextShape</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.img = getImage();</span><br><span class="line"><span class="keyword">this</span>.updateFrame = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.color = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">7</span>);</span><br><span class="line"><span class="keyword">this</span>.layout = layouts[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">7</span>)];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.drawNextShape = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//循环行</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="keyword">this</span>.layout.length; i++) &#123;</span><br><span class="line"><span class="comment">//循环列</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;<span class="keyword">this</span>.layout[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.layout[i][j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">nextContext.drawImage(<span class="keyword">this</span>.img,<span class="keyword">this</span>.color*<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">20</span>,j*blockSize,i*blockSize,blockSize,blockSize);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方块</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Shape</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//定义画的初始位置</span></span><br><span class="line"><span class="keyword">this</span>.currentX = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">this</span>.currentY = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//图片对象</span></span><br><span class="line"><span class="keyword">this</span>.img = getImage();</span><br><span class="line"><span class="comment">//方块的颜色</span></span><br><span class="line"><span class="keyword">this</span>.color = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">7</span>);</span><br><span class="line"><span class="comment">//方块的形状</span></span><br><span class="line"><span class="keyword">this</span>.layout = layouts[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">7</span>)];</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 2 [</span></span><br><span class="line"><span class="comment"> *[0,1,0],</span></span><br><span class="line"><span class="comment"> *[1,1,1]</span></span><br><span class="line"><span class="comment"> *],</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">this</span>.drawShape = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//循环行</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="keyword">this</span>.layout.length; i++) &#123;</span><br><span class="line"><span class="comment">//循环列</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;<span class="keyword">this</span>.layout[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.layout[i][j]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">gameContext.drawImage(<span class="keyword">this</span>.img,<span class="keyword">this</span>.color*<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">20</span>,(<span class="keyword">this</span>.currentX+j)*blockSize,(<span class="keyword">this</span>.currentY+i)*blockSize,blockSize,blockSize);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取图片对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getImage</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">img.src = <span class="string">"img/blocks1.png"</span>;</span><br><span class="line"><span class="keyword">return</span> img;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画网格</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawLine</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//画横线</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">21</span>; i++)&#123;</span><br><span class="line">gameContext.beginPath();</span><br><span class="line">gameContext.strokeStyle = <span class="string">"white"</span>;</span><br><span class="line">gameContext.lineWidth = <span class="number">2</span>;</span><br><span class="line">gameContext.moveTo(<span class="number">0.5</span>,blockSize*i+<span class="number">0.5</span>);</span><br><span class="line">gameContext.lineTo(blockSize*<span class="number">10</span>+<span class="number">0.5</span>,blockSize*i+<span class="number">0.5</span>);</span><br><span class="line">gameContext.stroke();</span><br><span class="line">gameContext.closePath();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画竖线</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">11</span>; i++)&#123;</span><br><span class="line">gameContext.beginPath();</span><br><span class="line">gameContext.strokeStyle = <span class="string">"white"</span>;</span><br><span class="line">gameContext.lineWidth = <span class="number">2</span>;</span><br><span class="line">gameContext.moveTo(blockSize*i+<span class="number">0.5</span>,<span class="number">0.5</span>);</span><br><span class="line">gameContext.lineTo(blockSize*i+<span class="number">0.5</span>,blockSize*<span class="number">20</span>+<span class="number">0.5</span>);</span><br><span class="line">gameContext.stroke();</span><br><span class="line">gameContext.closePath();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//控制移动或变形</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">keyAndDown</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (obj)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"暂停或继续游戏"</span>);</span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">"img"</span>);</span><br><span class="line"><span class="keyword">if</span> (isStart) &#123;</span><br><span class="line">isStart = <span class="literal">false</span>;</span><br><span class="line">btn.src = <span class="string">"img/bofang.png"</span>;</span><br><span class="line">clearInterval(timer);</span><br><span class="line">timer = <span class="literal">null</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">isStart = <span class="literal">true</span>;</span><br><span class="line">btn.src = <span class="string">"img/zanting.png"</span>;</span><br><span class="line">timer = setInterval(move,<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">if</span>(isStart)&#123;</span><br><span class="line"><span class="keyword">switch</span> (obj)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"变形"</span>);</span><br><span class="line"><span class="comment">//变形后的数组</span></span><br><span class="line"><span class="keyword">var</span> lay = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;shape.layout[<span class="number">0</span>].length; j++) &#123;</span><br><span class="line">lay[j] = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;shape.layout.length; i++) &#123;</span><br><span class="line">lay[j][i] = shape.layout[shape.layout.length-i<span class="number">-1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//记录变形后 的偏移量</span></span><br><span class="line"><span class="keyword">var</span> offsetX = shape.currentX + lay[<span class="number">0</span>].length;</span><br><span class="line"><span class="keyword">var</span> offsetY = shape.currentY + lay.length;</span><br><span class="line"></span><br><span class="line"><span class="comment">//记录真实的x,y坐标</span></span><br><span class="line"><span class="keyword">var</span> xZuoBiao = shape.currentX;</span><br><span class="line"><span class="keyword">var</span> yZuoBiao = shape.currentY;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (offsetX &gt; <span class="number">10</span>) &#123;</span><br><span class="line">xZuoBiao = <span class="number">10</span> -lay[<span class="number">0</span>].length;</span><br><span class="line"><span class="comment">//return;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (offsetY &gt; <span class="number">20</span>) &#123;</span><br><span class="line">yZuoBiao = <span class="number">20</span> -lay.length;</span><br><span class="line"><span class="comment">//return;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断变形后的方块与list种方块的重叠</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;lay.length; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;lay[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span> (lay[i][j]&gt;<span class="number">0</span> &amp;&amp; list[yZuoBiao+i][xZuoBiao+j]&gt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">shape.currentX = xZuoBiao;</span><br><span class="line">shape.currentY = yZuoBiao;</span><br><span class="line">shape.layout = lay;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"加速"</span>);</span><br><span class="line"><span class="keyword">if</span>(isMove(<span class="number">0</span>,<span class="number">1</span>))&#123;</span><br><span class="line">shape.currentY +=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"向左"</span>);</span><br><span class="line"><span class="keyword">if</span>(isMove(<span class="number">-1</span>,<span class="number">0</span>))&#123;</span><br><span class="line">shape.currentX -=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"向右"</span>);</span><br><span class="line"><span class="keyword">if</span>(isMove(<span class="number">1</span>,<span class="number">0</span>))&#123;</span><br><span class="line">shape.currentX +=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;JS部分&quot;&gt;&lt;a href=&quot;#JS部分&quot; class=&quot;headerlink&quot; title=&quot;JS部分&quot;&gt;&lt;/a&gt;JS部分&lt;/h2&gt;&lt;h4 id=&quot;1-设置游戏画布的大小，并将网格画出&quot;&gt;&lt;a href=&quot;#1-设置游戏画布的大小，并将网格画出&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="H5" scheme="http://kuangyuanbin.cn/categories/H5/"/>
    
      <category term="JavaScript" scheme="http://kuangyuanbin.cn/categories/H5/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://kuangyuanbin.cn/tags/JavaScript/"/>
    
      <category term="H5实训(软件过程管理)" scheme="http://kuangyuanbin.cn/tags/H5%E5%AE%9E%E8%AE%AD-%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    
      <category term="游戏" scheme="http://kuangyuanbin.cn/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Canvas学习</title>
    <link href="http://kuangyuanbin.cn/2020/02/21/Canvas%E5%AD%A6%E4%B9%A0/"/>
    <id>http://kuangyuanbin.cn/2020/02/21/Canvas%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-02-21T09:20:56.000Z</published>
    <updated>2020-02-22T11:26:18.237Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是-Canvas？"><a href="#什么是-Canvas？" class="headerlink" title="什么是 Canvas？"></a>什么是 Canvas？</h2><p>HTML5 的 canvas 元素使用 JavaScript 在网页上绘制图像。</p><p>画布是一个矩形区域，您可以控制其每一像素。</p><p>canvas 拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法。</p><h2 id="创建-Canvas-元素"><a href="#创建-Canvas-元素" class="headerlink" title="创建 Canvas 元素"></a>创建 Canvas 元素</h2><p>向 HTML5 页面添加 canvas 元素。</p><p>规定元素的 id、宽度和高度：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"myCanvas"</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">height</span>=<span class="string">"100"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="通过-JavaScript-来绘制"><a href="#通过-JavaScript-来绘制" class="headerlink" title="通过 JavaScript 来绘制"></a>通过 JavaScript 来绘制</h2><p>canvas 元素本身是没有绘图能力的。所有的绘制工作必须在 JavaScript 内部完成：</p><h3 id="获取画布及画笔"><a href="#获取画布及画笔" class="headerlink" title="获取画布及画笔"></a>获取画布及画笔</h3><ul><li>一个画布对应一个画笔</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取画布</span></span><br><span class="line"><span class="keyword">var</span> myCanvas = <span class="built_in">document</span>.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="comment">//获取画笔 </span></span><br><span class="line"><span class="keyword">var</span> myContext = myCanvas.getContext(<span class="string">"2d"</span>);</span><br></pre></td></tr></table></figure></div><h3 id="画线"><a href="#画线" class="headerlink" title="画线"></a>画线</h3><ul><li><p>beginPath（）开启一条路径；</p><p>closePath（）关闭这条路径</p></li><li><p><strong>stroke</strong>（）：画线</p></li><li><p>strokeStyle(“颜色”)：线条样式，默认为黑色</p></li><li><p>fillStyle(“颜色”)：填充样式</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">myContext.beginPath();</span><br><span class="line">myContext.moveTo(<span class="number">10</span>,<span class="number">250</span>);  <span class="comment">//线的起点</span></span><br><span class="line">myContext.lineTo(<span class="number">10</span>,<span class="number">450</span>); <span class="comment">//截止点</span></span><br><span class="line">myContext.lineTo(<span class="number">200</span>,<span class="number">450</span>);</span><br><span class="line">myContext.stroke();</span><br><span class="line">myContext.closePath();</span><br></pre></td></tr></table></figure></div><h3 id="画矩形"><a href="#画矩形" class="headerlink" title="画矩形"></a>画矩形</h3><ul><li><p><strong>rect</strong>(x,y,w,h)</p><p>参数含义：</p><ul><li>x,y画图的起点坐标</li><li>w,h画的大小</li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">myContext.beginPath();</span><br><span class="line"></span><br><span class="line"><span class="comment">//矩形 x,y画图的起点坐标 w,h画的大小</span></span><br><span class="line">myContext.rect(<span class="number">10</span>,<span class="number">10</span>,<span class="number">50</span>,<span class="number">20</span>);</span><br><span class="line"><span class="comment">//myContext.strokeStyle = "aqua";</span></span><br><span class="line"><span class="comment">//myContext.stroke();</span></span><br><span class="line">myContext.fillStyle = <span class="string">"aquamarine"</span>;</span><br><span class="line">myContext.fill();<span class="comment">//填充</span></span><br><span class="line"></span><br><span class="line">myContext.closePath();</span><br></pre></td></tr></table></figure></div><h3 id="画圆"><a href="#画圆" class="headerlink" title="画圆"></a>画圆</h3><ul><li><p><strong>arc</strong>（x,y,r,startAngle,endAngle,anticlockwise）</p><p>参数含义：</p><ul><li>x，y圆心点坐标</li><li>r半径</li><li>startAngle起始弧度&nbsp;&nbsp;&nbsp;endAngle截止弧度&nbsp;&nbsp;&nbsp;0度点:中心点右侧&nbsp;&nbsp;&nbsp;&nbsp;Math.PI = 180度</li><li>anticlockwise画的方向（boolean值）&nbsp;&nbsp;  true：逆时针</li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">myContext.beginPath();</span><br><span class="line">myContext.arc(<span class="number">250</span>,<span class="number">250</span>,<span class="number">50</span>,<span class="number">0</span>,<span class="built_in">Math</span>.PI*<span class="number">0.5</span>,<span class="literal">true</span>);</span><br><span class="line">myContext.fill();</span><br><span class="line">myContext.closePath();</span><br></pre></td></tr></table></figure></div><h3 id="橡皮擦"><a href="#橡皮擦" class="headerlink" title="橡皮擦"></a>橡皮擦</h3><ul><li><strong>clearRect</strong>()：清楚画布选中的矩形区域</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myContext.clearRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">500</span>,<span class="number">250</span>);</span><br></pre></td></tr></table></figure></div><h3 id="画图片"><a href="#画图片" class="headerlink" title="画图片"></a>画图片</h3><ul><li><p><strong>drawImage</strong>(img_elem,dx_or_sx,dy_or_sy,dw_or_sw,dh_or_sh,dx,dy,dw,dh)</p><p>参数含义：</p><ol><li>img_elem&emsp;图片对象</li><li>dx_or_sx</li><li>dy_or_sy&emsp;2,3代表是画的起点坐标或者截取(图片)的起点坐标</li><li>dw_or_sw</li><li>dh_or_sh&emsp;4,5代表画的大小或者截取(图片)的大小</li><li>dx</li><li>dy&emsp;画的起点坐标(当2,3为截取的坐标时6，7就需要了)</li><li>dw</li><li>dh&emsp;画的大小(要么 2，3，4，5 要么6，7，8，9)</li></ol><p>如果当2，3，4，5为截取的坐标及大小时8，9(画的大小)是不可以省略的</p><p>如果2，3，4，5为画的起点坐标及大小 那么 4，5是可以省略的(因情况而定)</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">context.beginPath();</span><br><span class="line"><span class="comment">//2,3,4,5参数就代表了画的起点和大小</span></span><br><span class="line">context.drawImage(img,<span class="number">10</span>,<span class="number">10</span>,<span class="number">280</span>,<span class="number">40</span>);</span><br><span class="line"><span class="comment">//2,3代表画的起点 4，5(可省略 此时画的是图片原始尺寸大小)</span></span><br><span class="line">context.drawImage(img,<span class="number">10</span>,<span class="number">10</span>);</span><br><span class="line"><span class="comment">//裁剪图片的起点坐标 是相对于图片自身坐标系</span></span><br><span class="line"><span class="comment">//当2，3，4，5代表裁剪时 6，7，8，9代表画并且8，9不可以省略</span></span><br><span class="line">context.drawImage(img,<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">20</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">20</span>);</span><br><span class="line">context.closePath();</span><br></pre></td></tr></table></figure></div><p><strong>案例：粒子动画</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> w = <span class="built_in">window</span>.innerWidth;</span><br><span class="line"><span class="keyword">var</span> h = <span class="built_in">window</span>.innerHeight;</span><br><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">"canvas"</span>);</span><br><span class="line">canvas.width = w;</span><br><span class="line">canvas.height = h;</span><br><span class="line">canvas.style.backgroundColor=<span class="string">"black"</span>;</span><br><span class="line"><span class="comment">//添加到body</span></span><br><span class="line"><span class="built_in">document</span>.body.appendChild(canvas);</span><br><span class="line"><span class="keyword">var</span> context = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> particles = [];</span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//context.clearRect(0,0,w,h);</span></span><br><span class="line">    <span class="keyword">var</span> particle = <span class="keyword">new</span> Particle();</span><br><span class="line">    particles.push(particle);</span><br><span class="line">    <span class="keyword">if</span> (particles.length&gt;<span class="number">300</span>) &#123;</span><br><span class="line">        particles.shift();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;particles.length;i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> p = particles[i];</span><br><span class="line">        p.updateFrame();</span><br><span class="line">        p.drawParticle();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Particle</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.y = h/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">this</span>.x = w/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">this</span>.yval = <span class="number">-7</span>;</span><br><span class="line">    <span class="keyword">this</span> .xval = <span class="built_in">Math</span>.random()*<span class="number">6</span><span class="number">-3</span>;</span><br><span class="line">    <span class="keyword">this</span>.yg = <span class="number">0.1</span>;</span><br><span class="line">    <span class="keyword">this</span>.r = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*<span class="number">255</span>);</span><br><span class="line">    <span class="keyword">this</span>.g = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*<span class="number">255</span>);</span><br><span class="line">    <span class="keyword">this</span>.b = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*<span class="number">255</span>);</span><br><span class="line">    <span class="keyword">this</span>.updateFrame = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.yval += <span class="keyword">this</span>.yg;</span><br><span class="line">        <span class="keyword">this</span>.y += <span class="keyword">this</span>.yval;</span><br><span class="line">        <span class="keyword">this</span>.x +=<span class="keyword">this</span>.xval;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.drawParticle = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        context.beginPath();</span><br><span class="line">        context.fillStyle = <span class="string">"rgba("</span>+<span class="keyword">this</span>.r+<span class="string">","</span>+<span class="keyword">this</span>.g+<span class="string">","</span>+<span class="keyword">this</span>.b+<span class="string">",0.8)"</span>;</span><br><span class="line">        context.arc(<span class="keyword">this</span>.x,<span class="keyword">this</span>.y,<span class="number">10</span>,<span class="number">0</span>,<span class="built_in">Math</span>.PI*<span class="number">2</span>,<span class="literal">false</span>);</span><br><span class="line">        context.fill();</span><br><span class="line">        context.closePath();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是-Canvas？&quot;&gt;&lt;a href=&quot;#什么是-Canvas？&quot; class=&quot;headerlink&quot; title=&quot;什么是 Canvas？&quot;&gt;&lt;/a&gt;什么是 Canvas？&lt;/h2&gt;&lt;p&gt;HTML5 的 canvas 元素使用 JavaScript 在网页
      
    
    </summary>
    
    
      <category term="H5" scheme="http://kuangyuanbin.cn/categories/H5/"/>
    
      <category term="JavaScript" scheme="http://kuangyuanbin.cn/categories/H5/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://kuangyuanbin.cn/tags/JavaScript/"/>
    
      <category term="H5实训(软件过程管理)" scheme="http://kuangyuanbin.cn/tags/H5%E5%AE%9E%E8%AE%AD-%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    
      <category term="学习笔记" scheme="http://kuangyuanbin.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript进阶</title>
    <link href="http://kuangyuanbin.cn/2020/02/21/JavaScript%E8%BF%9B%E9%98%B6/"/>
    <id>http://kuangyuanbin.cn/2020/02/21/JavaScript%E8%BF%9B%E9%98%B6/</id>
    <published>2020-02-21T03:36:48.000Z</published>
    <updated>2020-02-21T10:17:56.439Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><ul><li>DOM是Document Object Model（文档对象模型）的缩写</li><li>BOM的一种   BOM：浏览器对象 操作浏览器</li><li>DOM文档对象（标签 标签属性 标签函数等）操作网页<ul><li>html 标签 标记</li><li>css  元素</li><li>js   节点</li></ul></li></ul><h3 id="一-获取节点"><a href="#一-获取节点" class="headerlink" title="(一)获取节点"></a>(一)获取节点</h3><h4 id="1-js中也有对应的选择器querySelector-（jQuery的初始状态）"><a href="#1-js中也有对应的选择器querySelector-（jQuery的初始状态）" class="headerlink" title="1.js中也有对应的选择器querySelector （jQuery的初始状态）"></a>1.js中也有对应的选择器querySelector （jQuery的初始状态）</h4><ul><li>querySelector 对应选择器标签的第一个；querySelectorAll获取对应选择器的所有标签（数组对象）</li><li>querySelector(“选择器”) 跟css写法一样</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> li =<span class="built_in">document</span>.querySelector(<span class="string">"li"</span>);</span><br><span class="line"><span class="keyword">var</span> div =<span class="built_in">document</span>.querySelector(<span class="string">"#box"</span>);</span><br><span class="line"><span class="keyword">var</span> p =<span class="built_in">document</span>.querySelector(<span class="string">".p"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> lis =<span class="built_in">document</span>.querySelectorAll(<span class="string">"li"</span>);</span><br></pre></td></tr></table></figure></div><h4 id="2-通过名字来获取标签"><a href="#2-通过名字来获取标签" class="headerlink" title="2.通过名字来获取标签"></a>2.通过名字来获取标签</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过id名</span></span><br><span class="line"><span class="keyword">var</span> div1  = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="comment">//通过类型名</span></span><br><span class="line"><span class="keyword">var</span> ps = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"p"</span>);</span><br><span class="line"><span class="keyword">var</span> lis1 = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</span><br><span class="line"><span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementsByName(<span class="string">"username"</span>);</span><br></pre></td></tr></table></figure></div><h3 id="二）操作属性样式及内容"><a href="#二）操作属性样式及内容" class="headerlink" title="(二）操作属性样式及内容"></a>(二）操作属性样式及内容</h3><h4 id="1-操作属性"><a href="#1-操作属性" class="headerlink" title="1.操作属性"></a>1.操作属性</h4><ul><li>标签内的属性都可以操作，如<code>&lt;div id=&quot;&quot; class=&quot;&quot; style=&quot;&quot;&gt;</code>中的<code>id</code>，<code>class</code>，<code>style</code>等。</li><li>通过方法：节点名.<strong>setAttribute</strong>()   （常用）</li><li>直接用.属性的方式</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> divP = <span class="built_in">document</span>.querySelector(<span class="string">"div p"</span>);<span class="comment">//先获取节点</span></span><br><span class="line"><span class="comment">//可添加类和id选择器</span></span><br><span class="line">divP.setAttribute(<span class="string">'class'</span>,<span class="string">'divP'</span>);</span><br><span class="line">divP.setAttribute(<span class="string">'id'</span>,<span class="string">'p1'</span>);</span><br><span class="line"><span class="comment">//添加样式 （注意样式覆盖的问题）</span></span><br><span class="line">divP.setAttribute(<span class="string">'style'</span>,<span class="string">'border: 1px solid red;'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//直接用属性设置</span></span><br><span class="line">divP.id = <span class="string">"p1"</span>;</span><br><span class="line">div.className = <span class="string">"box1"</span>;  <span class="comment">//class属于js中的关键字 所以使用className</span></span><br></pre></td></tr></table></figure></div><h4 id="2-获取属性值"><a href="#2-获取属性值" class="headerlink" title="2.获取属性值"></a>2.获取属性值</h4><ul><li>通过方法：节点名.<strong>getAttribute</strong>()   </li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">divP.getAttribute(<span class="string">"class"</span>);</span><br></pre></td></tr></table></figure></div><h4 id="3-操作样式-两种方式"><a href="#3-操作样式-两种方式" class="headerlink" title="3.操作样式(两种方式)"></a>3.操作样式(两种方式)</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一</span></span><br><span class="line">divP.setAttribute(<span class="string">'style'</span>,<span class="string">'border: 1px solid red;'</span>);</span><br><span class="line"><span class="comment">//错误：divP.setAttribute('border','1px solid red;');</span></span><br><span class="line"><span class="comment">//方式二</span></span><br><span class="line">div.style.backgroundColor = <span class="string">"tan"</span>;</span><br><span class="line"><span class="comment">//错误：div.backgroundColor = "tan";</span></span><br></pre></td></tr></table></figure></div><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><h3 id="（一）事件绑定方式"><a href="#（一）事件绑定方式" class="headerlink" title="（一）事件绑定方式"></a>（一）事件绑定方式</h3><h4 id="1、DOM节点绑定"><a href="#1、DOM节点绑定" class="headerlink" title="1、DOM节点绑定"></a>1、DOM节点绑定</h4><p>（1）同名事件会被覆盖<br>（2）事件处理函数只能冒泡阶段执行</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure></div><h4 id="2、作为html属性（不常用，不实用）"><a href="#2、作为html属性（不常用，不实用）" class="headerlink" title="2、作为html属性（不常用，不实用）"></a>2、作为html属性（不常用，不实用）</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onclick</span>=<span class="string">"sum()"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h4 id="3、事件监听器"><a href="#3、事件监听器" class="headerlink" title="3、事件监听器"></a>3、事件监听器</h4><p>（1）同名事件不会被覆盖<br>（2）事件处理函数默认冒泡阶段执行</p><h3 id="二-事件分类"><a href="#二-事件分类" class="headerlink" title="(二)事件分类"></a>(二)事件分类</h3><h4 id="1-鼠标事件"><a href="#1-鼠标事件" class="headerlink" title="1.鼠标事件"></a>1.鼠标事件</h4><p>（1）<strong>onclick</strong> ==&gt; (onclick = onmousedown + onmouseup) （当用户点击某个对象时调用的事件）</p><p>  (2) <strong>ondblclick</strong> ==&gt; 双击 （当用户双击某个对象时调用的事件）</p><p>（3）<strong>onmousedown</strong> ==&gt; 鼠标按钮被按下。</p><p>（4）<strong>onmouseup</strong> ==&gt; 鼠标按键被松开。</p><p>（5）onmouseover ==&gt; 鼠标移到某元素之上。</p><p>（5）<strong>onmouseenter</strong> ==&gt; 鼠标移到某元素之上。(这个事件不冒泡)</p><p>（6）<strong>onmouseout</strong> ==&gt; 鼠标从某元素移开。</p><p>（6）onmouseleave ==&gt; 鼠标从某元素移开。（这个事件不冒泡）</p><p>（7）<strong>onmousemove</strong> ==&gt; 鼠标被移动时触发。</p><p>（8）oncontextmenu ==&gt; 鼠标右键菜单展开时触发。</p><h4 id="2-键盘事件"><a href="#2-键盘事件" class="headerlink" title="2.键盘事件"></a>2.键盘事件</h4><p>​    (1) <strong>onkeydown</strong> ==&gt; 某个键盘按键被按下。</p><p>​    (2) <strong>onkeyup</strong> ==&gt; 某个键盘按键被松开。</p><p>​    (3) onkeypress ==&gt; 键盘&lt;字符键&gt;被按下,而且如果按住不放的话，会重复触发此事件。</p><h4 id="3-UI事件"><a href="#3-UI事件" class="headerlink" title="3.UI事件"></a>3.UI事件</h4><p>​    (1) **onload ==&gt; 页面元素（包括图片多媒体等）加载完成后</p><p>​    (2) **onscroll ==&gt; 滚动时触发。</p><p>​    (3) onresize ==&gt; 窗口或框架被重新调整大小</p><h4 id="4-表单事件"><a href="#4-表单事件" class="headerlink" title="4.表单事件"></a>4.表单事件</h4><p>​    (1) onselect ==&gt; 输入框文本被选中。</p><p>​    (2) onblur ==&gt; 元素失去焦点时触发。</p><p>​    (3) onfocus ==&gt; 元素获得焦点时触发。</p><p>​    (4) onchange ==&gt; 元素内容被改变，且失去焦点时触发。</p><p>​    (5) onreset ==&gt; 重置按钮被点击。</p><p>​    (6) onsubmit ==&gt; 确认按钮被点击。</p><p>​    (7) oninput ==&gt; 输入字符时触发</p><h3 id="（三）event对象"><a href="#（三）event对象" class="headerlink" title="（三）event对象"></a>（三）event对象</h3><ul><li><p>(兼容ie浏览器 e = e||window.event)</p><p>兼容写法，一般直接给e赋值再用：e = e || window.event;</p></li></ul><p>1、作用:监听事件执行过程中的状态，用来保存当前事件的信息</p><p>2、event对象的属性</p><h4 id="（一）与鼠标相关的"><a href="#（一）与鼠标相关的" class="headerlink" title="（一）与鼠标相关的"></a>（一）与鼠标相关的</h4><h5 id="1、-鼠标按键"><a href="#1、-鼠标按键" class="headerlink" title="1、 鼠标按键"></a>1、 鼠标按键</h5><ul><li><p>button  返回当事件被触发时，哪个鼠标按键被点击。</p><ul><li>标准浏览器：0，1，2（左，滚，右）<ul><li>IE8-（IE8以下的浏览器）<br>1鼠标左键， 2鼠标右键， 3左右同时按， 4滚轮， 5左键加滚轮， 6右键加滚轮， 7三个同时   </li></ul></li></ul></li></ul><h5 id="2、光标位置信息"><a href="#2、光标位置信息" class="headerlink" title="2、光标位置信息"></a>2、光标位置信息</h5><p>(1) <strong>clientX /clientY</strong> ==&gt; 可视区域的位置</p><ul><li>光标相对于浏览器可视区域的位置，也就是浏览器坐标。</li></ul><p>(2) <strong>screenX /screenY</strong> ==&gt; 电脑屏幕</p><ul><li>光标指针相对于电脑屏幕的水平/垂直坐标</li></ul><p>(3)<strong>pageX /pageY</strong> ==&gt; 与滚动关联</p><ul><li>鼠标相对于文档的位置    </li><li>包括滚动条滚动的距离</li></ul><p>(4)<strong>offsetX/offsetY</strong> ==&gt;光标相对（监听元素）偏移量</p><ul><li>光标相对于事件源对象左上角相对偏移量。</li><li>事件源对象：触发事件的对象</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现对目标物体的拖拽</span></span><br><span class="line"><span class="comment"> * 原理：鼠标按下且移动鼠标时，改变当前元素的top，left值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">".box"</span>);</span><br><span class="line"><span class="comment">//给目标元素添加onmousedown事件</span></span><br><span class="line"><span class="comment">//- 记录按下鼠标位置与元素左上角的偏移量offsetX，offsetY</span></span><br><span class="line">div.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ox = e.offsetX;</span><br><span class="line">    <span class="keyword">var</span> oy = e.offsetY;</span><br><span class="line">    <span class="comment">//当onmousedown发生以后，此刻给document添加onmousemove事件</span></span><br><span class="line">    <span class="built_in">window</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        div.style.left = e.pageX - ox + <span class="string">'px'</span>;</span><br><span class="line">        div.style.top =  e.pageY - oy + <span class="string">'px'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清空document的onmousemove事件</span></span><br><span class="line">div.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.onmousemove = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//给目标元素添加onmousedown事件</span></span><br><span class="line"><span class="comment">//- 记录按下鼠标位置与元素左上角的偏移量offsetX，offsetY</span></span><br><span class="line">div.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ox = e.offsetX;</span><br><span class="line">    <span class="keyword">var</span> oy = e.offsetY;</span><br><span class="line">    <span class="comment">//当onmousedown发生以后，此刻给document添加onmousemove事件</span></span><br><span class="line">    <span class="built_in">window</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        div.style.left = e.pageX - ox + <span class="string">'px'</span>;</span><br><span class="line">        div.style.top =  e.pageY - oy + <span class="string">'px'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清空document的onmousemove事件</span></span><br><span class="line">div.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.onmousemove = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="（二）event与键盘有关的属性"><a href="#（二）event与键盘有关的属性" class="headerlink" title="（二）event与键盘有关的属性"></a>（二）event与键盘有关的属性</h4><p>1、 e.keyCode/which/(event.which)</p><ul><li>对于keypress事件，该属性声明了被敲击的键生成的 Unicode 字符码(ASCII码)</li><li>对于keydown和keyup事件，它<strong>指定了被敲击的键的虚拟键盘码</strong>。虚拟键盘码可能和使用的键盘的布局相关。</li></ul><p>2、ctrlKey ==&gt; CTRL 键</p><ul><li>当事件被触发时，CTRL 键是否被按下。返回值为布尔值</li></ul><p>3、 altKey ==&gt; Alt键</p><ul><li>当事件被触发时，Alt键是否被按下。返回值为布尔值</li></ul><p>4、 shiftKey ==&gt; Shift键</p><ul><li>当事件被触发时，Shift键是否被按下。返回值为布尔值</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> move = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//按 → ←键移动 </span></span><br><span class="line">onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> event = e || <span class="built_in">window</span>.event;</span><br><span class="line"><span class="built_in">console</span>.log(e.keyCode);</span><br><span class="line"><span class="keyword">switch</span> (event.keyCode)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">37</span>:</span><br><span class="line">move -=<span class="number">10</span>;</span><br><span class="line">div.style.marginLeft = move+<span class="string">"px"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">39</span>:</span><br><span class="line">move +=<span class="number">10</span>;</span><br><span class="line">div.style.marginLeft = move+<span class="string">"px"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;DOM&quot;&gt;&lt;a href=&quot;#DOM&quot; class=&quot;headerlink&quot; title=&quot;DOM&quot;&gt;&lt;/a&gt;DOM&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;DOM是Document Object Model（文档对象模型）的缩写&lt;/li&gt;
&lt;li&gt;BOM的一种   BOM：浏
      
    
    </summary>
    
    
      <category term="H5" scheme="http://kuangyuanbin.cn/categories/H5/"/>
    
      <category term="JavaScript" scheme="http://kuangyuanbin.cn/categories/H5/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://kuangyuanbin.cn/tags/JavaScript/"/>
    
      <category term="H5实训(软件过程管理)" scheme="http://kuangyuanbin.cn/tags/H5%E5%AE%9E%E8%AE%AD-%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    
      <category term="学习笔记" scheme="http://kuangyuanbin.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基础</title>
    <link href="http://kuangyuanbin.cn/2020/02/17/JavaScript%E5%9F%BA%E7%A1%80/"/>
    <id>http://kuangyuanbin.cn/2020/02/17/JavaScript%E5%9F%BA%E7%A1%80/</id>
    <published>2020-02-17T11:16:43.000Z</published>
    <updated>2020-02-19T11:28:20.300Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标签种类"><a href="#标签种类" class="headerlink" title="标签种类"></a>标签种类</h2><p>标签可分为两种：</p><ol><li><strong>单标签</strong>：由一个标签组成。例如 <code>&lt;hr /&gt;</code></li><li><strong>双标签</strong>：由“开始标签”和“结束标签”两部分构成。例如<code>&lt;p&gt;&lt;/p&gt;</code></li></ol><p>标签分为两种等级：</p><ol><li>　行内元素</li><li>　块级元素</li></ol><p>行内元素和块级元素的区别：</p><p><strong>行内元素</strong>：　　</p><ul><li>与其他行内元素并排</li><li>不能设置宽高，默认的宽度就是文字的宽度</li></ul><p><strong>块级元素</strong>：</p><ul><li><p>霸占一行，不能与其他任何元素并列。</p></li><li><p>能接受宽高，如果不设置宽度，那么宽度将默认变为父级的100%。</p></li></ul><h2 id="样式类型"><a href="#样式类型" class="headerlink" title="样式类型"></a>样式类型</h2><p>css样式有以下三种类型：</p><ol><li><p>内联样式</p><p>内联样式是直接在html标签上定义该标签的css样式.如<code>&lt;div style=&quot;&quot;&gt;&lt;/div&gt;</code></p></li><li><p>内部样式</p><p>内部样式是写在html文件中，且包含在<code>&lt;style&gt;&lt;/style&gt;</code>代码块中</p></li><li><p>外部样式</p><p>外部样式是通过在html中引用外部css文件来控制样式</p><p>html文件中用<code>link</code>链入</p></li></ol><h2 id="JavaScript数据类型及输出"><a href="#JavaScript数据类型及输出" class="headerlink" title="JavaScript数据类型及输出"></a>JavaScript数据类型及输出</h2><h3 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h3><ol><li><p>声明变量,通过关键字var。例如：<code>var a = 5</code></p></li><li><p>同时声明多个变量,用逗号隔开。例如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>  <span class="keyword">var</span> a,b,c;</span><br><span class="line"><span class="number">2</span>     a = <span class="number">10</span>;</span><br><span class="line"><span class="number">3</span>     b = <span class="number">20</span>;</span><br><span class="line"><span class="number">4</span>     c = <span class="number">30</span>;</span><br></pre></td></tr></table></figure></div></li><li><p>变量名的命名规则</p><p>（1） 不能以数字开头,可包含字母、数字、_、$<br>（2）不能使用关键字<br>（3） 严格区分大小写<br>（4） 命名建议：见名知意</p></li></ol><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="1、基本数据类型"><a href="#1、基本数据类型" class="headerlink" title="1、基本数据类型"></a>1、基本数据类型</h4><p><strong>（1） 数字类型number</strong></p><ol><li>普通数字</li><li>NaN：代表非数字</li></ol><ul><li>与任何数进行运算都得到NaN</li><li>不等于任何数，甚至不等于自己</li><li>isNaN() 判断是不是非数字，如果是特殊的非数字值 NaN（或者能被转换为这样的值），返回的值就是 true。如果是其他值,则返回 false。</li></ul><p><strong>（2）字符串类型 string</strong></p><ol><li><p>有引号的值都是字符串类型</p></li><li><p>字符串内还有别的在引号（’’,””）</p><ul><li><p>将外层引号替换成另外一种</p></li><li><p>通过转义字符\</p></li></ul></li></ol><p><strong>（3）布尔类型 boolean</strong></p><p>​    只有两个值：true 、false</p><h4 id="2、特殊数据类型"><a href="#2、特殊数据类型" class="headerlink" title="2、特殊数据类型"></a>2、特殊数据类型</h4><p>（1）null 空对象</p><ul><li>只有唯一的值null</li><li>注意代码的执行顺序。</li></ul><p>（2）undefined 代表的是声明变量未赋值</p><ul><li>只有唯一的值undefined</li><li>注意区分报错信息： ** is not defined。代表变量未声明。</li></ul><h4 id="3、-判断数据类型-typeof"><a href="#3、-判断数据类型-typeof" class="headerlink" title="3、 判断数据类型 typeof()"></a>3、 判断数据类型 typeof()</h4><h3 id="数据类型的转换"><a href="#数据类型的转换" class="headerlink" title="数据类型的转换"></a>数据类型的转换</h3><h4 id="1、直接转换"><a href="#1、直接转换" class="headerlink" title="1、直接转换"></a>1、直接转换</h4><p>（1）Number() 转换成数字类型</p><ul><li>字符串-&gt;数字： 空字符串转成数字为0.若可以转换成数字，返回值就是数字。若不能转成数字就是NaN。</li><li>布尔值-&gt;数字： true-&gt;1,false-&gt;0</li></ul><p>（2）String() 转换成字符串类型</p><ul><li>直接加引号</li></ul><p>（3）Boolean() 转换成布尔类型</p><ul><li>除了0、NaN、””、null、undefined转成false，其他都转成true。</li></ul><h4 id="2、隐式转换"><a href="#2、隐式转换" class="headerlink" title="2、隐式转换"></a>2、隐式转换</h4><p>（1）若运算无法进行下去的时候，会尝试将数据类型进行隐式转换后，再运算。<br>（2）若隐式转换后依旧无法运算，会返回NaN</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><h4 id="1-alert（）"><a href="#1-alert（）" class="headerlink" title="1. alert（）"></a>1. alert（）</h4><p>(具体的值||变量(不要加引号)) 弹窗</p><h4 id="2-document-write（）"><a href="#2-document-write（）" class="headerlink" title="2. document.write（）"></a>2. document.write（）</h4><p>(具体的值||变量(不加引号))<br>往body里面追加内容</p><h4 id="3-console-log（）"><a href="#3-console-log（）" class="headerlink" title="3. console.log（）"></a>3. console.log（）</h4><p>(具体的值||变量(不要加引号))  打印到控制台console，一般用于代码调试</p><h4 id="4-ID名称-innerHTML-“内容或标签”"><a href="#4-ID名称-innerHTML-“内容或标签”" class="headerlink" title="4. ID名称.innerHTML = “内容或标签”"></a>4. ID名称.innerHTML = “内容或标签”</h4><p>给**元素添加内容，内容可以包括标签。</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="1、算术运算符："><a href="#1、算术运算符：" class="headerlink" title="1、算术运算符： +    -    *    /    %"></a>1、算术运算符： +    -    *    /    %</h3><ul><li><p>+当运算式中有字符串时，做字符串的拼接</p></li><li><p>- / % 将纯数字的字符串转成数值进行运算</p><p>例如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="string">'10'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a+b); <span class="comment">//1010 String</span></span><br><span class="line"><span class="built_in">console</span>.log(a-b); <span class="comment">//0 number</span></span><br><span class="line"><span class="built_in">console</span>.log(a*b); <span class="comment">//100 number</span></span><br><span class="line"><span class="built_in">console</span>.log(a/b); <span class="comment">//1    number</span></span><br><span class="line"><span class="built_in">console</span>.log(a%b); <span class="comment">//0    number</span></span><br><span class="line"></span><br><span class="line">b = <span class="string">'10a'</span></span><br><span class="line"><span class="comment">//a-b的值NaN 类型number</span></span><br><span class="line"><span class="comment">//取出b中的10进行计算: parseInt()</span></span><br></pre></td></tr></table></figure></div></li></ul><p><strong>常用的数学方法</strong></p><ol><li>parseInt()       取整数</li><li>parseFloat()     取浮点数</li><li>Math.round()     四舍五入</li><li>Math.random()    获取0-1的随机数，包含0，不包含1</li><li>Math.floor()     向下取整</li><li>Math.ceil()       向上取整</li><li>Math.abs()       绝对值</li></ol><h3 id="2-复合运算符："><a href="#2-复合运算符：" class="headerlink" title="2.复合运算符： +=    -=    *=    /=    %="></a>2.复合运算符： +=    -=    *=    /=    %=</h3><h3 id="3-比较运算符：-gt-lt-gt-lt-（全等）"><a href="#3-比较运算符：-gt-lt-gt-lt-（全等）" class="headerlink" title="3.比较运算符：&gt;  &lt;   &gt;=  &lt;=  !=   ==   ===（全等）"></a>3.比较运算符：&gt;  &lt;   &gt;=  &lt;=  !=   ==   ===（全等）</h3><p>​    注：<strong>==</strong>值相等，返回true；  <strong>===</strong>值和类型都相等，返回true</p><h3 id="4-逻辑运算符：-amp-amp-（与）-（或）-（非）"><a href="#4-逻辑运算符：-amp-amp-（与）-（或）-（非）" class="headerlink" title="4.逻辑运算符：&amp;&amp;（与）   ||（或）   !（非）"></a>4.逻辑运算符：&amp;&amp;（与）   ||（或）   !（非）</h3><h3 id="5-三目运算符：条件表达式？表达式1：表达式2。"><a href="#5-三目运算符：条件表达式？表达式1：表达式2。" class="headerlink" title="5.三目运算符：条件表达式？表达式1：表达式2。"></a>5.三目运算符：条件表达式？表达式1：表达式2。</h3><h2 id="分支、if及switch语句"><a href="#分支、if及switch语句" class="headerlink" title="分支、if及switch语句"></a>分支、if及switch语句</h2><h3 id="（一）if语句"><a href="#（一）if语句" class="headerlink" title="（一）if语句"></a>（一）if语句</h3><ol><li><h4 id="单分支"><a href="#单分支" class="headerlink" title="单分支"></a>单分支</h4><p>​    eg:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> score = prompt(<span class="string">"请输入一个成绩"</span>);</span><br><span class="line"><span class="keyword">if</span> (score&gt;=<span class="number">60</span>) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"及格"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li>注：<strong>prompt</strong>用于从页面输入</li></ul></li><li><h4 id="双分支"><a href="#双分支" class="headerlink" title="双分支"></a>双分支</h4><p>​    eg:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (score&gt;=<span class="number">60</span>) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"及格"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">             <span class="built_in">console</span>.log(<span class="string">"不及格"</span>);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure></div></li><li><h4 id="多分支"><a href="#多分支" class="headerlink" title="多分支"></a>多分支</h4><p>​    eg:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(score &lt; <span class="number">60</span>)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"不及格"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">60</span> &amp;&amp; score &lt;<span class="number">75</span>)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"及格"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">75</span> &amp;&amp; score &lt;<span class="number">85</span>)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"中"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">85</span> &amp;&amp; score &lt;<span class="number">95</span>)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"良"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"优"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li></ol><h3 id="（二）switch语句"><a href="#（二）switch语句" class="headerlink" title="（二）switch语句"></a>（二）switch语句</h3><p>​        eg:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (month)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"31天"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"31天"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"30天"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">month = <span class="built_in">parseInt</span>(month);</span><br><span class="line"><span class="keyword">switch</span> (month)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"31天"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"30天"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>注意事项:</p><ul><li>switch判断值相等时是利用全等于，值及类型都必须一致</li><li>每个case语句执行代码完毕后，记得break。</li></ul><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><h3 id="（一）for循环"><a href="#（一）for循环" class="headerlink" title="（一）for循环"></a>（一）for循环</h3><p>​        eg:计算1~100的整数和</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i &lt; <span class="number">101</span>; i++) &#123;</span><br><span class="line">sum +=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(sum);</span><br></pre></td></tr></table></figure></div><p>​        eg:画5*5表格</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str1 = <span class="string">"&lt;table border='1' style='width:200px;height:200px'&gt;"</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)&#123;</span><br><span class="line">str1 +=<span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;<span class="number">5</span>; j++) &#123;</span><br><span class="line">str1 += <span class="string">"&lt;td&gt;&lt;/td&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">str1 +=<span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">str1 += <span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line"><span class="built_in">document</span>.write(str1);</span><br><span class="line"><span class="comment">//在页面上输出标签document.write()</span></span><br><span class="line"><span class="comment">//document 文档对象</span></span><br></pre></td></tr></table></figure></div><h3 id="（二）while循环"><a href="#（二）while循环" class="headerlink" title="（二）while循环"></a>（二）while循环</h3><p>​                 变量初始化;<br>​                 while(条件){<br>                        满足条件执行的代码;<br>​                        变量更新;<br>​                   }</p><h3 id="（三）do-while-循环"><a href="#（三）do-while-循环" class="headerlink" title="（三）do{}while()循环"></a>（三）do{}while()循环</h3><p>​        do{</p><p>​        执行的代码;变量更新</p><p>​        }while(条件)</p><p>​     <strong>特点：先do一遍，再判断条件</strong></p><h3 id="（四）关键字break、continue"><a href="#（四）关键字break、continue" class="headerlink" title="（四）关键字break、continue"></a>（四）关键字break、continue</h3><ul><li><p>break 结束当前的整个循环</p></li><li><p>continue 跳过当前的本次循环，进入下一次循环</p></li></ul><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="（一）概念"><a href="#（一）概念" class="headerlink" title="（一）概念"></a>（一）概念</h3><ol><li>函数就是把特定功能的代码抽取出并进行<strong>封装</strong>,用来重复执行一些功能</li><li>使用函数的<strong>好处</strong>：<ol><li>重复使用</li><li>忽略细节</li><li>选择执行</li></ol></li><li>函数的<strong>特点</strong>：<ol><li>​    一次定义 多次使用</li><li>方便代码管理</li><li>便于控制程序的执行</li></ol></li></ol><h3 id="（二）声明函数"><a href="#（二）声明函数" class="headerlink" title="（二）声明函数"></a>（二）声明函数</h3><ol><li>function关键字声明</li></ol><p>​    function 函数名(形参){调用函数时执行的代码}</p><ol start="2"><li>赋值式</li></ol><p>​    var 函数名 = function(形参){调用函数时执行的代码}    </p><ol start="3"><li>构造函数,不常用 ==&gt; new Function()</li></ol><p>eg:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数：通过传过来的行和列的值画表格</span></span><br><span class="line"><span class="comment">//x，y形参 代表传过来的值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawTable</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">"&lt;table border='1' style='width:200px; height:200px;'&gt;"</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;x; i++) &#123;</span><br><span class="line">str += <span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;y; j++) &#123;</span><br><span class="line">str += <span class="string">"&lt;td&gt;&lt;/td&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">str += <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">str += <span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line"><span class="built_in">document</span>.write(str);</span><br><span class="line">&#125;</span><br><span class="line">drawTable(<span class="number">10</span>,<span class="number">10</span>); <span class="comment">//画10*10的表格</span></span><br></pre></td></tr></table></figure></div><h3 id="（三）调用函数"><a href="#（三）调用函数" class="headerlink" title="（三）调用函数"></a>（三）调用函数</h3><ol><li>手动执行：<strong>函数名（）</strong></li><li>事件驱动<ol><li><strong>[onclick=”函数名()”]</strong></li><li><strong>ele.onclick = 函数名</strong></li><li><strong>ele.onclick = function(){}</strong></li></ol></li></ol><h3 id="（四）函数的分类"><a href="#（四）函数的分类" class="headerlink" title="（四）函数的分类"></a>（四）函数的分类</h3><ol><li>自定义函数,声明函数</li><li>匿名函数 function(){}</li><li>内置函数</li></ol><h3 id="（五）函数的参数"><a href="#（五）函数的参数" class="headerlink" title="（五）函数的参数"></a>（五）函数的参数</h3><ol><li>形参：在函数声明时的参数（变量）    通俗讲：形式上的参数 占位的</li><li>实参：在函数执行时的参数（值）   通俗讲: 实际上传递的参数</li><li>arguments:  Javascrip中每个函数都会有一个Arguments对象实例arguments，它引用着函数的实参，可以用数组下标的方式”[]”引用arguments的元素。<ul><li>arguments.length：函数实参个数</li><li>arguments.callee：引用函数自身</li></ul></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算多个数的和</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fnSum1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="built_in">arguments</span>.length;i++) &#123;</span><br><span class="line">sum += <span class="built_in">arguments</span>[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(sum);</span><br><span class="line">&#125;</span><br><span class="line">fnSum1(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line"><span class="comment">//如果参数个数未知，参数个数过多我们会选择使用arguments</span></span><br><span class="line"><span class="comment">//如果参数个数已知，参数个数很少我们就会去设置形参</span></span><br></pre></td></tr></table></figure></div><h3 id="（六）函数的返回值：return"><a href="#（六）函数的返回值：return" class="headerlink" title="（六）函数的返回值：return"></a>（六）函数的返回值：return</h3><ol><li><p>return将函数内部的值（函数等）返回到函数外，函数外若想使用，必须要接收该返回值</p></li><li><p>return若不书写或者直接写return，函数的返回值为undefined</p></li><li><p>return 退出函数，当执行了return，函数后面的代码不再执行。</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMin</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> min = getMin;</span><br><span class="line"><span class="built_in">console</span>.log(min);</span><br></pre></td></tr></table></figure></div><h3 id="（七）函数的作用域"><a href="#（七）函数的作用域" class="headerlink" title="（七）函数的作用域"></a>（七）函数的作用域</h3><ol><li><p>概念：某个变量的使用范围，分成全局作用域及局部作用域</p></li><li><p>分类：</p><ul><li>全局变量：全局作用域下声明的变量（函数外声明的变量）</li><li>局部变量：局部作用域声明的变量（函数内声明的变量）</li></ul></li><li><p>变量的访问规则（就近原则）</p><p>（1）在函数内查找变量a,若自己内部已经声明该变量，那么使用函数内的该变量<br>（2）若在函数内查找不到声明，往函数外一层查找。若找到则使用，找不到继续往外找<br>（3）直到找到全局作用域，找到则使用，还找不到则报错，** is not defined。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//当不写var时 我们把它当做全局变量</span></span><br><span class="line">c = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">console</span>.log(c);</span><br><span class="line">&#125;</span><br><span class="line">fn2();</span><br><span class="line"><span class="built_in">console</span>.log(c);</span><br></pre></td></tr></table></figure></div></li></ol><h3 id="（八）闭包函数"><a href="#（八）闭包函数" class="headerlink" title="（八）闭包函数"></a>（八）闭包函数</h3><ul><li><p>1.函数自己调用自己本身    2.构造函数</p></li><li><p>函数套函数</p></li><li><p>可以存储我们想要的值</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> num=<span class="number">5</span>;</span><br><span class="line">      bar=<span class="function"><span class="keyword">function</span>(<span class="params">y</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (x+y+(++num));</span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(foo(<span class="number">2</span>));    <span class="comment">//undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(bar(<span class="number">10</span>));<span class="comment">//18</span></span><br><span class="line"><span class="built_in">console</span>.log(bar(<span class="number">10</span>));<span class="comment">//19</span></span><br></pre></td></tr></table></figure></div></li></ul><h3 id="（九）函数中的-this"><a href="#（九）函数中的-this" class="headerlink" title="（九）函数中的:this"></a>（九）函数中的:this</h3><p>1、指的是调用该函数的当前对象</p><p>2、函数手动执行时，this为window</p><p>3、事件驱动函数时，this为事件绑定的对象</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--<span class="keyword">this</span>代表当前标签--&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"box1"</span> onclick=<span class="string">"buttonClickBox1(this)"</span>&gt;</span><br><span class="line">box1</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定时器  1000ms 执行一次function()&#123;&#125;</span></span><br><span class="line"><span class="comment">//通过id名获取标签</span></span><br><span class="line"><span class="keyword">var</span> myP =<span class="built_in">document</span>.getElementById(<span class="string">"myP"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(myP);</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">6</span>;</span><br><span class="line"><span class="keyword">var</span> timer =setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">num -= <span class="number">1</span>;</span><br><span class="line"><span class="comment">//innerText文本</span></span><br><span class="line">myP.innerText = num+<span class="string">'秒'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(num);</span><br><span class="line"><span class="keyword">if</span>(num == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//清除定时器</span></span><br><span class="line">clearInterval(timer);</span><br><span class="line">&#125;</span><br><span class="line">&#125;,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;标签种类&quot;&gt;&lt;a href=&quot;#标签种类&quot; class=&quot;headerlink&quot; title=&quot;标签种类&quot;&gt;&lt;/a&gt;标签种类&lt;/h2&gt;&lt;p&gt;标签可分为两种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;单标签&lt;/strong&gt;：由一个标签组成。例如 &lt;code&gt;&amp;l
      
    
    </summary>
    
    
      <category term="H5" scheme="http://kuangyuanbin.cn/categories/H5/"/>
    
      <category term="JavaScript" scheme="http://kuangyuanbin.cn/categories/H5/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://kuangyuanbin.cn/tags/JavaScript/"/>
    
      <category term="H5实训(软件过程管理)" scheme="http://kuangyuanbin.cn/tags/H5%E5%AE%9E%E8%AE%AD-%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    
      <category term="学习笔记" scheme="http://kuangyuanbin.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot配置文件及自动配置原理</title>
    <link href="http://kuangyuanbin.cn/2020/02/12/SpringBoot%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%8A%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86/"/>
    <id>http://kuangyuanbin.cn/2020/02/12/SpringBoot%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%8A%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86/</id>
    <published>2020-02-12T06:55:05.000Z</published>
    <updated>2020-02-12T08:22:19.721Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot：配置文件及自动配置原理"><a href="#SpringBoot：配置文件及自动配置原理" class="headerlink" title="SpringBoot：配置文件及自动配置原理"></a>SpringBoot：配置文件及自动配置原理</h1><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>SpringBoot使用一个全局的配置文件 ， 配置文件名称是固定的</p><ul><li>application.properties<ul><li>语法结构 ： key=value</li></ul></li><li>application.yml<ul><li>语法结构 ：key：空格 value</li></ul></li></ul><p><strong>配置文件的作用 ：</strong>修改SpringBoot自动配置的默认值，因为SpringBoot在底层都给我们自动配置好了；</p><h2 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a>YAML</h2><p><strong>标记语言</strong></p><p> 以前的配置文件，大多数都是使用xml来配置；比如一个简单的端口配置，我们来对比下yaml和xml</p><p>yaml配置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server：</span></span><br><span class="line">    <span class="attr">prot:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure></div><p>xml配置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8081<span class="tag">&lt;<span class="name">port</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="YAML语法"><a href="#YAML语法" class="headerlink" title="YAML语法"></a>YAML语法</h3><p><strong>基础语法：</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">k:(空格)</span> <span class="string">v</span></span><br></pre></td></tr></table></figure></div><p>以此来表示一对键值对（空格不能省略）；以空格的缩进来控制层级关系，只要是左边对齐的一列数据都是同一个层级的。</p><p>注意 ：属性和值的大小写都是十分敏感的。例子：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/hello</span></span><br></pre></td></tr></table></figure></div><h3 id="值的写法"><a href="#值的写法" class="headerlink" title="值的写法"></a><strong>值的写法</strong></h3><p><strong>字面量：普通的值 [ 数字，布尔值，字符串 ]</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k: v</span><br></pre></td></tr></table></figure></div><p>字面量直接写在后面就可以 ， 字符串默认不用加上双引号或者单引号；</p><p>“” 双引号，不会转义字符串里面的特殊字符 ， 特殊字符会作为本身想表示的意思；</p><p>比如 ： name: “kuang \n shen”  输出 ： kuang 换行  shen</p><p>‘’ 单引号，会转义特殊字符 ， 特殊字符最终会变成和普通字符一样输出</p><p>比如 ： name: ‘kuang \n shen’  输出 ： kuang \n  shen</p><p><strong>对象、Map（键值对）</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">k:</span> </span><br><span class="line">    <span class="attr">v1:</span></span><br><span class="line">    <span class="attr">v2:</span></span><br></pre></td></tr></table></figure></div><p>在下一行来写对象的属性和值得关系，注意缩进；比如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">student:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kuangyuanbin</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">21</span></span><br></pre></td></tr></table></figure></div><p>行内写法</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">student:</span> <span class="string">&#123;name:</span> <span class="string">kuangyuanbin,age:</span> <span class="number">21</span><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></div><p><strong>数组（ List、set ）</strong></p><p>用 - 值表示数组中的一个元素,比如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pets:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">cat</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">dog</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">pig</span></span><br></pre></td></tr></table></figure></div><p>行内写法</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pets:</span> <span class="string">[cat,dog,pig]</span></span><br></pre></td></tr></table></figure></div><h2 id="注入配置文件"><a href="#注入配置文件" class="headerlink" title="注入配置文件"></a>注入配置文件</h2><h3 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a>程序实现</h3><p><strong>1. 如果要使用properties配置文件可能导入时存在乱码现象 ， 需要在IDEA中进行调整 ， 我们这里直接使用yml文件 ， 将默认的 application.properties后缀修改为yml</strong> </p><p><img src="https://img2018.cnblogs.com/blog/1418974/201907/1418974-20190728162138583-1678681762.png" alt="img"></p><p><strong>2. 导入配置文件处理器</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--导入配置文件处理器，配置文件进行绑定就会有提示--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;</span><br><span class="line">    &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p> <strong>3.编写yml 配置文件</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">person:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">qinjiang</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">happy:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">birth:</span> <span class="number">2000</span><span class="string">/01/01</span></span><br><span class="line">    <span class="attr">maps:</span> <span class="string">&#123;k1:</span> <span class="string">v1,k2:</span> <span class="string">v2&#125;</span></span><br><span class="line">    <span class="attr">lists:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">code</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">girl</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">music</span></span><br><span class="line">    <span class="attr">dog:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">旺财</span></span><br><span class="line">      <span class="attr">age:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></div><p> <strong>4.在SpringBoot的主程序的同级目录下建包，只有这样，主程序才会对这些类生效 ； 我们建一个pojo的包放入我们的Person类和Dog类；</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.springbootdemo03.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@ConfigurationProperties作用：</span></span><br><span class="line"><span class="comment">将配置文件中配置的每一个属性的值，映射到这个组件中；</span></span><br><span class="line"><span class="comment">告诉SpringBoot将本类中的所有属性和配置文件中相关的配置进行绑定</span></span><br><span class="line"><span class="comment">参数 prefix = “person” : 将配置文件中的person下面的所有属性一一对应</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">只有这个组件是容器中的组件，才能使用容器提供的@ConfigurationProperties功能</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Component</span> <span class="comment">//注册bean</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"person"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Boolean happy;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; maps;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; lists;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//get,set方法</span></span><br><span class="line">    <span class="comment">//toString方法</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>记得写上 toString（）方法，方便调试输出结果</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.springbootdemo03.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//get、set方法</span></span><br><span class="line">    <span class="comment">//toString()方法  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>5.确认无误后，到测试单元中进行测试，看是否注入成功！</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">SpringbootDemo03ApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    Person person = <span class="keyword">new</span> Person();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(person);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>运行结果</strong></p><p><img src="https://img2018.cnblogs.com/blog/1418974/201907/1418974-20190728163527890-382471618.png" alt="img"></p><p><strong>注：配置文件除了yml还有我们之前常用的properties ， 我们没有讲 ， properties配置文件在写中文的时候，会有乱码 ， 我们需要去IDEA中设置编码格式为UTF-8；</strong></p><p><strong>settings–&gt;FileEncodings 中配置；</strong></p><p><img src="https://img2018.cnblogs.com/blog/1418974/201907/1418974-20190728164337141-1866486258.png" alt="img"></p><h2 id="类和配置文件的两种关联方式对比"><a href="#类和配置文件的两种关联方式对比" class="headerlink" title="类和配置文件的两种关联方式对比"></a>类和配置文件的两种关联方式对比</h2><p>功能对比图</p><p><img src="https://img2018.cnblogs.com/blog/1418974/201907/1418974-20190728164637719-1038154879.png" alt="img"></p><ul><li><p>@ConfigurationProperties只需要写一次即可 ， @value则需要每个字段都添加</p></li><li><p>松散绑定：这个什么意思呢? 比如我的yml中写的last-name，这个和lastName是一样的， - 后面跟着的字母默认是大写的。这就是松散绑定</p></li><li><p>JSR303数据校验 ， 这个就是我们可以在字段是增加一层过滤器验证 ， 可以保证数据的合法性</p></li><li><p>复杂类型封装，yml中可以封装对象 ， 使用@value就不支持</p><p><strong>结论：</strong></p></li><li><p>配置yml和配置properties都可以获取到值 ， 强烈推荐 yaml</p></li><li><p>如果我们在某个业务中，只需要获取配置文件中的某个值，可以使用一下 @value</p></li><li><p>如果说，我们专门编写了一个JavaBean来和配置文件进行映射，就直接使用@configurationProperties，不要犹豫！</p></li></ul><h3 id="JSR303数据校验"><a href="#JSR303数据校验" class="headerlink" title="JSR303数据校验"></a>JSR303数据校验</h3><p>spring-boot中可以用@validated来校验数据，如果数据异常则会统一抛出异常，方便异常中心统一处理。我们这里来写个注解让我们的name只能支持Email格式</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span> <span class="comment">//注册bean</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"person"</span>)</span><br><span class="line"><span class="meta">@Validated</span>  <span class="comment">//数据校验</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@Value("$&#123;person.name&#125;")</span></span><br><span class="line">    <span class="meta">@Email</span> <span class="comment">//name必须是邮箱格式</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure></div><p><strong>运行结果</strong> </p><p> <img src="https://img2018.cnblogs.com/blog/1418974/201907/1418974-20190728170423075-754365376.png" alt="img"></p><p><strong>使用数据校验，可以保证数据的正确性；</strong></p><h3 id="加载指定配置文件"><a href="#加载指定配置文件" class="headerlink" title="加载指定配置文件"></a>加载指定配置文件</h3><p> <strong>1. @PropertySource ：</strong>加载指定的配置文件；使用@configurationProperties默认从全局配置文件中获取值；</p><p>我们去在resources目录下新建一个<strong>person.properties</strong>文件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name</span>=<span class="string">kuangshen</span></span><br></pre></td></tr></table></figure></div><p>然后在我们的代码中指定加载person.properties文件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PropertySource</span>(value = <span class="string">"classpath:person.properties"</span>)</span><br><span class="line"><span class="meta">@Component</span> <span class="comment">//注册bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;name&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    ......  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>测试结果：</strong></p><p><img src="https://img2018.cnblogs.com/blog/1418974/201907/1418974-20190728173752209-1527374517.png" alt="img"></p><h2 id="多环境切换"><a href="#多环境切换" class="headerlink" title="多环境切换"></a>多环境切换</h2><p>profile是Spring对不同环境提供不同配置功能的支持，可以通过激活不同的环境版本，实现快速切换环境；</p><p><strong>方式一：多配置文件</strong></p><p>我们在主配置文件编写的时候，文件名可以是 application-{profile}.properties/yml ， 用来指定多个环境版本；</p><p>例如：application-test.properties 代表测试环境配置  application-dev.properties 代表开发环境配置</p><p>但是Springboot并不会直接启动这些配置文件，它默认使用application.properties主配置文件；</p><p>我们需要通过一个配置来选择需要激活的环境；</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#比如在配置文件中指定使用dev环境，我们可以通过设置不同的端口号进行测试；</span></span><br><span class="line"><span class="comment">#我们启动SpringBoot，就可以看到已经切换到dev下的配置了；</span></span><br><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">dev</span></span><br></pre></td></tr></table></figure></div><p><strong>方式二：yml的多文档块</strong></p><p>和properties配置文件中一样，但是使用yml去实现不需要创建多个配置文件，更加方便了</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="comment">#选择要激活那个环境块</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">prod</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line"><span class="comment">#配置环境的名称</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8084</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">prod</span>  <span class="comment">#配置环境的名称</span></span><br></pre></td></tr></table></figure></div><p><strong>注意：如果yml和properties同时都配置了端口，并且没有激活其他环境 ， 默认会使用properties配置文件的！</strong></p><h3 id="配置文件加载位置"><a href="#配置文件加载位置" class="headerlink" title="配置文件加载位置"></a><strong>配置文件加载位置</strong></h3><p><strong>springboot 启动会扫描以下位置的application.properties或者application.yml文件作为Spring boot的默认配置文件</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">优先级1：项目路径下的config文件夹配置文件</span><br><span class="line">优先级2：项目路径下配置文件</span><br><span class="line">优先级3：资源路径下的config文件夹配置文件</span><br><span class="line">优先级4：资源路径下配置文件</span><br></pre></td></tr></table></figure></div><p>优先级由高到底，高优先级的配置会覆盖低优先级的配置；</p><p><strong>SpringBoot会从这四个位置全部加载主配置文件；互补配置；</strong></p><p><strong>【扩展】指定位置加载配置文件</strong></p><p>我们还可以通过spring.config.location来改变默认的配置文件位置</p><p>项目打包好以后，我们可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；</p><p>这种情况，一般是后期运维做的多，相同配置，外部指定的配置文件优先级最高</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">java</span> <span class="string">-jar spring-boot-config.jar --spring.config.location=F:/application.properties</span></span><br></pre></td></tr></table></figure></div><p><strong>外部加载配置文件的方式十分多，我们选择最常用的即可，在开发的资源文件中进行配置！</strong></p><p><a href="https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/htmlsingle/#boot-features-external-config" target="_blank" rel="noopener">官方外部配置文件说明参考文档</a></p><h2 id="自动配置原理"><a href="#自动配置原理" class="headerlink" title="自动配置原理"></a>自动配置原理</h2><h3 id="配置文件到底能写什么？怎么写？"><a href="#配置文件到底能写什么？怎么写？" class="headerlink" title="配置文件到底能写什么？怎么写？"></a>配置文件到底能写什么？怎么写？</h3><p><a href="https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/htmlsingle/#common-application-properties" target="_blank" rel="noopener">SpringBoot官方文档</a></p><h3 id="分析自动配置原理"><a href="#分析自动配置原理" class="headerlink" title="分析自动配置原理"></a>分析自动配置原理</h3><p>\1. SpringBoot启动的时候加载主配置类，开启了自动配置功能 <strong>@EnableAutoConfiguration</strong> </p><p>\2. @EnableAutoConfiguration 作用 ：</p><ul><li><p>利用EnableAutoConfigurationImportSelector给容器中导入一些组件，导入了哪些组件呢？</p></li><li><p>可以查看这个类selectImports()方法的内容，他返回了一个 autoConfigurationEntry , 来自 this.getAutoConfigurationEntry(autoConfigurationMetadata, annotationMetadata); 这个方法。我们继续跟踪；</p></li><li><p>这个方法中有一个值 ： List<String> configurations = this.getCandidateConfigurations(annotationMetadata, attributes); 叫做获取候选的配置 ， 我们点击去继续跟踪；</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getCandidateConfigurations</span><span class="params">(AnnotationMetadata metadata, AnnotationAttributes attributes)</span> </span>&#123;</span><br><span class="line">    List&lt;String&gt; configurations = SpringFactoriesLoader.loadFactoryNames(<span class="keyword">this</span>.getSpringFactoriesLoaderFactoryClass(), <span class="keyword">this</span>.getBeanClassLoader());</span><br><span class="line">    Assert.notEmpty(configurations, <span class="string">"No auto configuration classes found in META-INF/spring.factories. If you are using a custom packaging, make sure that file is correct."</span>);</span><br><span class="line">    <span class="keyword">return</span> configurations;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p> 这里里面有一个 SpringFactoriesLoader.loadFactoryNames() ，我们继续进去看 , 它又调用了 loadSpringFactories 方法；继续跟踪。发现它去获得了一个资源文件：”META-INF/spring.factories”</p></li><li><pre><code class="java">Enumeration&lt;URL&gt; urls = classLoader != <span class="keyword">null</span> ? classLoader.getResources(<span class="string">"META-INF/spring.factories"</span>) : ClassLoader.getSystemResources(<span class="string">"META-INF/spring.factories"</span>);&lt;!--￼<span class="number">23</span>--&gt;每一个这样的 xxxAutoConfiguration类都是容器中的一个组件，最后都加入到容器中；用他们来做自动配置；\<span class="number">3</span>. 每一个自动配置类可以进行自动配置功能；\<span class="number">4</span>. 我们以**HttpEncodingAutoConfiguration（Http编码自动配置）**为例解释自动配置原理；</code></pre></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">//表示这是一个配置类，以前编写的配置文件一样，也可以给容器中添加组件</span></span><br><span class="line"><span class="comment">//启动指定类的ConfigurationProperties功能；</span></span><br><span class="line"><span class="comment">//进入这个HttpProperties查看，将配置文件中对应的值和HttpProperties绑定起来；</span></span><br><span class="line"><span class="comment">//并把HttpProperties加入到ioc容器中</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span>(&#123;HttpProperties<span class="class">.<span class="keyword">class</span>&#125;) </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">//<span class="title">Spring</span>底层@<span class="title">Conditional</span>注解</span></span><br><span class="line"><span class="class">//根据不同的条件判断，如果满足指定的条件，整个配置类里面的配置就会生效；</span></span><br><span class="line"><span class="class">//这里的意思就是判断当前应用是否是<span class="title">web</span>应用，如果是，当前配置类生效</span></span><br><span class="line"><span class="class">@<span class="title">ConditionalOnWebApplication</span>(</span></span><br><span class="line"><span class="class">    <span class="title">type</span> </span>= Type.SERVLET</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断当前项目有没有这个类CharacterEncodingFilter；SpringMVC中进行乱码解决的过滤器；</span></span><br><span class="line"><span class="meta">@ConditionalOnClass</span>(&#123;CharacterEncodingFilter<span class="class">.<span class="keyword">class</span>&#125;)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">//判断配置文件中是否存在某个配置：<span class="title">spring</span>.<span class="title">http</span>.<span class="title">encoding</span>.<span class="title">enabled</span>；</span></span><br><span class="line"><span class="class">//如果不存在，判断也是成立的</span></span><br><span class="line"><span class="class">//即使我们配置文件中不配置<span class="title">pring</span>.<span class="title">http</span>.<span class="title">encoding</span>.<span class="title">enabled</span></span>=<span class="keyword">true</span>，也是默认生效的；</span><br><span class="line"><span class="meta">@ConditionalOnProperty</span>(</span><br><span class="line">    prefix = <span class="string">"spring.http.encoding"</span>,</span><br><span class="line">    value = &#123;<span class="string">"enabled"</span>&#125;,</span><br><span class="line">    matchIfMissing = <span class="keyword">true</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpEncodingAutoConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//他已经和SpringBoot的配置文件映射了</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Encoding properties;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//只有一个有参构造器的情况下，参数的值就会从容器中拿</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HttpEncodingAutoConfiguration</span><span class="params">(HttpProperties properties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.properties = properties.getEncoding();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给容器中添加一个组件，这个组件的某些值需要从properties中获取</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean</span> <span class="comment">//判断容器没有这个组件？</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CharacterEncodingFilter <span class="title">characterEncodingFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CharacterEncodingFilter filter = <span class="keyword">new</span> OrderedCharacterEncodingFilter();</span><br><span class="line">        filter.setEncoding(<span class="keyword">this</span>.properties.getCharset().name());</span><br><span class="line">        filter.setForceRequestEncoding(<span class="keyword">this</span>.properties.shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties.Encoding.Type.REQUEST));</span><br><span class="line">        filter.setForceResponseEncoding(<span class="keyword">this</span>.properties.shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties.Encoding.Type.RESPONSE));</span><br><span class="line">        <span class="keyword">return</span> filter;</span><br><span class="line">    &#125;</span><br><span class="line">    。。。。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p> <strong>一句话总结 ： 根据当前不同的条件判断，决定这个配置类是否生效！</strong></p><p> 一但这个配置类生效；这个配置类就会给容器中添加各种组件；这些组件的属性是从对应的properties类中获取的，这些类里面的每一个属性又是和配置文件绑定的；</p><p>\5. 所有在配置文件中能配置的属性都是在xxxxProperties类中封装者‘；配置文件能配置什么就可以参照某个功能对应的这个属性类</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties</span>(</span><br><span class="line">    prefix = <span class="string">"spring.http"</span></span><br><span class="line">) <span class="comment">//从配置文件中获取指定的值和bean的属性进行绑定</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpProperties</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> logRequestDetails;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> HttpProperties.Encoding encoding = <span class="keyword">new</span> HttpProperties.Encoding();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HttpProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLogRequestDetails</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.logRequestDetails;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLogRequestDetails</span><span class="params">(<span class="keyword">boolean</span> logRequestDetails)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.logRequestDetails = logRequestDetails;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> HttpProperties.<span class="function">Encoding <span class="title">getEncoding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.encoding;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Encoding</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Charset DEFAULT_CHARSET;</span><br><span class="line">        <span class="keyword">private</span> Charset charset;</span><br><span class="line">        <span class="keyword">private</span> Boolean force;</span><br><span class="line">        <span class="keyword">private</span> Boolean forceRequest;</span><br><span class="line">        <span class="keyword">private</span> Boolean forceResponse;</span><br><span class="line">        <span class="keyword">private</span> Map&lt;Locale, Charset&gt; mapping;</span><br><span class="line">        </span><br><span class="line">        、、、、、、</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>我们去配置文件里面试试前缀，看提示！</p><p><img src="https://img2018.cnblogs.com/blog/1418974/201907/1418974-20190729005009604-866274977.png" alt="img"></p><p><strong>这就是自动装配的原理！</strong></p><p><strong>精髓：</strong></p><p><strong>1）SpringBoot启动会加载大量的自动配置类</strong></p><p><strong>2）我们看我们需要的功能有没有在SpringBoot默认写好的自动配置类当中；</strong></p><p><strong>3）我们再来看这个自动配置类中到底配置了哪些组件；（只要我们要用的组件存在在其中，我们就不需要再手动配置了）</strong></p><p><strong>4）给容器中自动配置类添加组件的时候，会从properties类中获取某些属性。我们只需要在配置文件中指定这些属性的值即可；</strong></p><p><strong>xxxxAutoConfigurartion：自动配置类；</strong>给容器中添加组件</p><p><strong>xxxxProperties:封装配置文件中相关属性；</strong></p><h3 id="Conditional"><a href="#Conditional" class="headerlink" title="@Conditional"></a><strong>@Conditional</strong></h3><p>了解完自动装配的原理后，我们来关注一个细节问题 ，<strong>自动配置类必须在一定的条件下才能生效；</strong></p><p><strong>@Conditional派生注解（Spring注解版原生的@Conditional作用）</strong></p><p>作用：必须是@Conditional指定的条件成立，才给容器中添加组件，配置配里面的所有内容才生效；</p><p><img src="https://img2018.cnblogs.com/blog/1418974/201907/1418974-20190729005838066-64765389.png" alt="img"></p><p><strong>那么多的自动配置类，必须在一定的条件下才能生效；也就是说，我们加载了这么多的配置类，但不是所有的都生效了。</strong></p><p>我们怎么知道哪些自动配置类生效；<strong>我们可以通过启用 debug=true属性；来让控制台打印自动配置报告，这样我们就可以很方便的知道哪些自动配置类生效；</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#开启springboot的调试类</span><br><span class="line">debug&#x3D;true</span><br></pre></td></tr></table></figure></div><p><strong>Positive matches:（自动配置类启用的：正匹配）</strong></p><p><strong>Negative matches:（没有启动，没有匹配成功的自动配置类：负匹配）</strong></p><p><strong>Unconditional classes: （没有条件的类）</strong></p><p><strong>参考文章：</strong></p><p><a href="https://www.cnblogs.com/hellokuangshen/p/11259029.html" target="_blank" rel="noopener">SpringBoot：配置文件及自动配置原理</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SpringBoot：配置文件及自动配置原理&quot;&gt;&lt;a href=&quot;#SpringBoot：配置文件及自动配置原理&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot：配置文件及自动配置原理&quot;&gt;&lt;/a&gt;SpringBoot：配置文件及自动配置
      
    
    </summary>
    
    
      <category term="SpringBoot" scheme="http://kuangyuanbin.cn/categories/SpringBoot/"/>
    
    
      <category term="学习笔记" scheme="http://kuangyuanbin.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="技术" scheme="http://kuangyuanbin.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot初探</title>
    <link href="http://kuangyuanbin.cn/2020/02/06/SpringBoot%E5%88%9D%E6%8E%A2/"/>
    <id>http://kuangyuanbin.cn/2020/02/06/SpringBoot%E5%88%9D%E6%8E%A2/</id>
    <published>2020-02-06T09:10:00.000Z</published>
    <updated>2020-02-06T11:49:07.733Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是SpringBoot"><a href="#什么是SpringBoot" class="headerlink" title="什么是SpringBoot"></a>什么是SpringBoot</h2><p>学过javaweb的同学就知道，开发一个web应用，从最初开始接触Servlet结合Tomcat, 跑出一个Hello Wolrld程序，是要经历特别多的步骤； 后来就用了框架Struts，再后来是SpringMVC，到了现在的SpringBoot，过一两年又会有其他web框架出现；不知道你们有没经历过框架不断的演进，然后自己开发项目所有的技术也再不断的变化、改造，反正我是都经历过了，哈哈。言归正传，什么是SpringBoot呢，就是一个javaweb的开发框架，和SpringMVC类似，对比其他javaweb框架的好处，官方说是简化开发，约定大于配置， you can “just run”，能迅速的开发web应用，几行代码开发一个http接口。</p><p>所有的技术框架的发展似乎都遵循了一条主线规律：从一个复杂应用场景 衍生 一种规范框架，人们只需要进行各种配置而不需要自己去实现它，这时候强大的配置功能成了优点；发展到一定程度之后，人们根据实际生产应用情况，选取其中实用功能和设计精华，重构出一些轻量级的框架；之后为了提高开发效率，嫌弃原先的各类配置过于麻烦，于是开始提倡“约定大于配置”，进而衍生出一些一站式的解决方案。</p><p>是的这就是Java企业级应用-&gt;J2EE-&gt;spring-&gt;springboot的过程。</p><p>随着 Spring 不断的发展，涉及的领域越来越多，项目整合开发需要配合各种各样的文件，慢慢变得不那么易用简单，违背了最初的理念，甚至人称配置地狱。Spring Boot 正是在这样的一个背景下被抽象出来的开发框架，目的为了让大家更容易的使用 Spring 、更容易的集成各种常用的中间件、开源软件；</p><p>Spring Boot 基于 Spring 开发，Spirng Boot 本身并不提供 Spring 框架的核心特性以及扩展功能，只是用于快速、敏捷地开发新一代基于 Spring 框架的应用程序。也就是说，它并不是用来替代 Spring 的解决方案，而是和 Spring 框架紧密结合用于提升 Spring 开发者体验的工具。Spring Boot 以<strong>约定大于配置的核心思想</strong>，默认帮我们进行了很多设置，多数 Spring Boot 应用只需要很少的 Spring 配置。同时它集成了大量常用的第三方库配置（例如 Redis、MongoDB、Jpa、RabbitMQ、Quartz 等等），Spring Boot 应用中这些第三方库几乎可以零配置的开箱即用，</p><p>简单来说就是SpringBoot其实不是什么新的框架，它默认配置了很多框架的使用方式，就像maven整合了所有的jar包，spring boot整合了所有的框架 。</p><p>Spring Boot 出生名门，从一开始就站在一个比较高的起点，又经过这几年的发展，生态足够完善，Spring Boot 已经当之无愧成为 Java 领域最热门的技术。</p><p><strong>Spring Boot的主要优点：</strong></p><ul><li><p>为所有Spring开发者更快的入门</p></li><li><p><strong>开箱即用</strong>，提供各种默认配置来简化项目配置</p></li><li><p>内嵌式容器简化Web项目</p></li><li><p>没有冗余代码生成和XML配置的要求</p></li></ul><h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><h3 id="什么是微服务？"><a href="#什么是微服务？" class="headerlink" title="什么是微服务？"></a>什么是微服务？</h3><p>微服务是一种架构风格，它要求我们在开发一个应用的时候，这个应用必须构建成一系列小服务的组合；可以通过http的方式进行互通。要说微服务架构，先得说说过去我们的单体应用架构。</p><h3 id="单体应用架构"><a href="#单体应用架构" class="headerlink" title="单体应用架构"></a>单体应用架构</h3><p>所谓单体应用架构（all in one）是指，我们将一个应用的中的所有应用服务都封装在一个应用中。</p><p>无论是ERP、CRM或是其他什么系统，你都把数据库访问，web访问，等等各个功能放到一个war包内。</p><ul><li>这样做的好处是，易于开发和测试；也十分方便部署；当需要扩展时，只需要将war复制多份，然后放到多个服务器上，再做个负载均衡就可以了。</li><li>单体应用架构的缺点是，哪怕我要修改一个非常小的地方，我都需要停掉整个服务，重新打包、部署这个应用war包。特别是对于一个大型应用，我们不可能吧所有内容都放在一个应用里面，我们如何维护、如何分工合作都是问题。</li></ul><h3 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h3><p>all in one的架构方式，我们把所有的功能单元放在一个应用里面。然后我们把整个应用部署到服务器上。如果负载能力不行，我们将整个应用进行水平复制，进行扩展，然后在负载均衡。</p><p>所谓微服务架构，就是打破之前all in one的架构方式，把每个功能元素独立出来。把独立出来的功能元素的动态组合，需要的功能元素才去拿来组合，需要多一些时可以整合多个功能元素。所以微服务架构是对功能元素进行复制，而没有对整个应用进行复制。</p><p>这样做的好处是：</p><ol><li>节省了调用资源。</li><li>每个功能元素的服务都是一个可替换的、可独立升级的软件代码。</li></ol><p><img src="https://blog.kuangstudy.com/usr/uploads/2019/10/3173282649.png" alt="1569860054088.png"></p><p>Martin Flower 于 2014 年 3 月 25 日写的《Microservices》，详细的阐述了什么是微服务。</p><ul><li>原文地址：<a href="http://martinfowler.com/articles/microservices.html" target="_blank" rel="noopener">http://martinfowler.com/articles/microservices.html</a></li><li>翻译：<a href="https://www.cnblogs.com/liuning8023/p/4493156.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuning8023/p/4493156.html</a></li></ul><h3 id="如何构建微服务"><a href="#如何构建微服务" class="headerlink" title="如何构建微服务"></a>如何构建微服务</h3><p>一个大型系统的微服务架构，就像一个复杂交织的神经网络，每一个神经元就是一个功能元素，它们各自完成自己的功能，然后通过http相互请求调用。比如一个电商系统，查缓存、连数据库、浏览页面、结账、支付等服务都是一个个独立的功能服务，都被微化了，它们作为一个个微服务共同构建了一个庞大的系统。如果修改其中的一个功能，只需要更新升级其中一个功能服务单元即可。</p><p>但是这种庞大的系统架构给部署和运维带来很大的难度。于是，spring为我们带来了构建大型分布式微服务的全套、全程产品：</p><ul><li>构建一个个功能独立的微服务应用单元，可以使用springboot，可以帮我们快速构建一个应用；</li><li>大型分布式网络服务的调用，这部分由spring cloud来完成，实现分布式；</li><li>在分布式中间，进行流式数据计算、批处理，我们有spring cloud data flow。</li><li>spring为我们想清楚了整个从开始构建应用到大型分布式应用全流程方案。</li></ul><p><img src="https://blog.kuangstudy.com/usr/uploads/2019/10/1647528912.png" alt="1569860149218.png"></p><h2 id="SpringBoot自动装配原理初探"><a href="#SpringBoot自动装配原理初探" class="headerlink" title="SpringBoot自动装配原理初探"></a>SpringBoot自动装配原理初探</h2><h3 id="自动配置"><a href="#自动配置" class="headerlink" title="自动配置"></a>自动配置</h3><p><strong>pom.xml</strong></p><ul><li><p>spring-boot-dependencies：核心依赖在父工程中</p></li><li><p>我们在写或者引入一些SpringBoot依赖的时候，不需要指定版本，就因为有这些版本仓库  </p></li></ul><p><strong>启动器</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><ul><li>启动器：说白了就是SpringBoot的启动场景</li><li>比如说spring-boot-starter-web,它就会帮我们自动导入web环境所有的依赖！</li><li>springboot会将所有的功能场景，都变成一个个的启动器</li><li>我们要使用什么功能，就只需要找到对应的启动器就可以了<code>starter</code></li></ul><p><strong>主程序</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@SpringBootApplication：标注这个类是一个springboot应用:启动类下的所有资源</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Springboot01HelloworldApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//将springboot应用启动</span></span><br><span class="line">        SpringApplication.run(Springboot01HelloworldApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li><p>注解</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootConfiguration</span>： springboot的配置</span><br><span class="line"><span class="meta">@Configuration</span>： spring配置类</span><br><span class="line"><span class="meta">@Component</span>： 说明这也是一个sping的组件</span><br><span class="line">    </span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span>： 自动配置</span><br><span class="line">    <span class="meta">@AutoConfigurationPackage</span>： 自动配置包</span><br><span class="line">   <span class="meta">@Import</span>(&#123;Registrar<span class="class">.<span class="keyword">class</span>&#125;)： 自动配置`包注册`</span></span><br><span class="line"><span class="class">    @<span class="title">Import</span>(</span>&#123;AutoConfigurationImportSelector<span class="class">.<span class="keyword">class</span>&#125;)： 自动配置导入选择</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">@<span class="title">ComponentScan</span>： 扫描当前主启动类同级的包</span></span><br><span class="line"><span class="class">//获取所有的配置    </span></span><br><span class="line"><span class="class"><span class="title">List</span>&lt;<span class="title">String</span>&gt; <span class="title">configurations</span> </span>= <span class="keyword">this</span>.getCandidateConfigurations(annotationMetadata, attributes);</span><br></pre></td></tr></table></figure></div><p>获取候选的配置</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getCandidateConfigurations</span><span class="params">(AnnotationMetadata metadata, AnnotationAttributes attributes)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; configurations = SpringFactoriesLoader.loadFactoryNames(<span class="keyword">this</span>.getSpringFactoriesLoaderFactoryClass(), <span class="keyword">this</span>.getBeanClassLoader());</span><br><span class="line">        Assert.notEmpty(configurations, <span class="string">"No auto configuration classes found in META-INF/spring.factories. If you are using a custom packaging, make sure that file is correct."</span>);</span><br><span class="line">        <span class="keyword">return</span> configurations;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p>META-INF/spring.factories：自动配置的核心文件</p><p><img src="image-20200204210750257.png" alt="image-20200204210750257"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Properties properties = PropertiesLoaderUtils.loadProperties(resource);</span><br><span class="line"><span class="comment">//所有资源加载到配置类中！</span></span><br></pre></td></tr></table></figure></div><p>随便打开一个自动配置类,核心注解<code>@ConditionalOnxxx</code>：如果这里面的条件都满足，才会生效</p></li></ul><p><strong>springboot所有自动配置都是在启动的时候扫描并加载：<code>spring.factories</code>所有的自动配置类都在这里面，但是不一定生效，要判断条件是否成立，只要导入了对应的start，就有对应的启动器了，有了启动器，我们自动装配就会生效，然后配置成功！</strong></p><p><strong>结论：</strong></p><ol><li>SpringBoot在启动的时候从类路径下的META-INF/spring.factories中获取EnableAutoConfiguration指定的值</li><li>将这些值作为自动配置类导入容器 ， 自动配置类就生效 ， 帮我们进行自动配置工作；</li><li>以前我们需要自己配置的东西 ， 自动配置类都帮我们解决了</li><li>整个J2EE的整体解决方案和自动配置都在springboot-autoconfigure的jar包中；</li><li><strong>它将所有需要导入的组件以全类名的方式返回 ， 这些组件就会被添加到容器中 ；</strong></li><li>它会给容器中导入非常多的自动配置类 （xxxAutoConfiguration）, 就是给容器中导入这个场景需要的所有组件 ， 并配置好这些组件 ；</li><li><strong>有了自动配置类 ， 免去了我们手动编写配置注入功能组件等的工作；</strong></li></ol><h3 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h3><p>我最初以为就是运行了一个main方法，没想到却开启了一个服务；</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootDemo02Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//该方法返回一个ConfigurableApplicationContext对象</span></span><br><span class="line">        <span class="comment">//参数一：应用入口的类     参数类：命令行参数</span></span><br><span class="line">        SpringApplication.run(SpringbootDemo02Application<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>SpringApplication.run分析</strong></p><p>分析该方法主要分两部分，一部分是SpringApplication的实例化，二是run方法的执行；</p><p><strong>SpringApplication</strong></p><p>这个类主要做了以下四件事情</p><ol><li>推断应用的类型是普通的项目还是Web项目</li><li>查找并加载所有可用初始化器 ， 设置到initializers属性中</li><li>找出所有的应用程序监听器，设置到listeners属性中</li><li>推断并设置main方法的定义类，找到运行的主类</li></ol><p><strong>run方法</strong></p><p><img src="https://blog.kuangstudy.com/usr/uploads/2019/10/700745206.png" alt="1353149994.png"></p><p><strong>参考文章：</strong></p><p><a href="https://blog.kuangstudy.com/index.php/archives/630/" target="_blank" rel="noopener">SpringBoot：快速入门</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是SpringBoot&quot;&gt;&lt;a href=&quot;#什么是SpringBoot&quot; class=&quot;headerlink&quot; title=&quot;什么是SpringBoot&quot;&gt;&lt;/a&gt;什么是SpringBoot&lt;/h2&gt;&lt;p&gt;学过javaweb的同学就知道，开发一个web应用，
      
    
    </summary>
    
    
      <category term="SpringBoot" scheme="http://kuangyuanbin.cn/categories/SpringBoot/"/>
    
    
      <category term="学习笔记" scheme="http://kuangyuanbin.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="技术" scheme="http://kuangyuanbin.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>hexo插入图片</title>
    <link href="http://kuangyuanbin.cn/2020/01/17/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <id>http://kuangyuanbin.cn/2020/01/17/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</id>
    <published>2020-01-17T12:03:08.000Z</published>
    <updated>2020-01-22T07:34:25.470Z</updated>
    
    <content type="html"><![CDATA[<p>在写文章时，常常有配图说明的需求，Hexo有多种图片插入方式，可以将图片存放在本地引用或者将图片放在CDN上引用，通过此文总接一下在Hexo搭建的博客中，插入图片的常用方式，也可以理解为在 Markdown 中插入图片。  <a id="more"></a></p><h4 id="src链接"><a href="#src链接" class="headerlink" title="src链接"></a>src链接</h4><p>如果你要插入的图片，是一个外部的 src 链接地址，比如该图片存放在 CDN 上，或某某图床上面，那就使用 Markdown 默认的插入图片的方式</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![alt](图片地址 &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure></div><h4 id="本地绝对路径"><a href="#本地绝对路径" class="headerlink" title="本地绝对路径"></a>本地绝对路径</h4><p>当 Hexo 项目中只用到少量图片时，可以将图片统一放在 source/images 文件夹中，通过 Markdown 语法访问它们。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![alt](&#x2F;images&#x2F;test.jpg)</span><br></pre></td></tr></table></figure></div><h4 id="本地相对路径"><a href="#本地相对路径" class="headerlink" title="本地相对路径"></a>本地相对路径</h4><p>图片除了可以放在统一的 images 文件夹中，还可以放在文章自己的目录中，文章的目录可以通过配置 _config.yml 来生成。配置如下:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure></div><p>将 _config.yml 文件中的配置项 post_asset_folder 设为 true 后，执行命令 $ hexo new post_name，在 source/_posts 中会生成文章 post_name.md 和同名文件夹 post_name 。将图片资源放在 post_name 中，文章就可以使用相对路径引用图片资源了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![alt](&#x2F;images&#x2F;test.jpg)</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在写文章时，常常有配图说明的需求，Hexo有多种图片插入方式，可以将图片存放在本地引用或者将图片放在CDN上引用，通过此文总接一下在Hexo搭建的博客中，插入图片的常用方式，也可以理解为在 Markdown 中插入图片。
    
    </summary>
    
    
      <category term="Hexo" scheme="http://kuangyuanbin.cn/categories/Hexo/"/>
    
    
      <category term="技术" scheme="http://kuangyuanbin.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>hexo中的nexT主题菜单栏选项跳转时出现Cannot GET</title>
    <link href="http://kuangyuanbin.cn/2020/01/16/hexo%E8%B8%A9%E5%9D%91%E4%B9%8B%E6%97%85/"/>
    <id>http://kuangyuanbin.cn/2020/01/16/hexo%E8%B8%A9%E5%9D%91%E4%B9%8B%E6%97%85/</id>
    <published>2020-01-16T12:24:08.000Z</published>
    <updated>2020-01-22T07:34:25.480Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo中的nexT主题菜单栏选项跳转时出现Cannot-GET-tags-20"><a href="#hexo中的nexT主题菜单栏选项跳转时出现Cannot-GET-tags-20" class="headerlink" title="hexo中的nexT主题菜单栏选项跳转时出现Cannot GET /tags/%20/"></a>hexo中的nexT主题菜单栏选项跳转时出现Cannot GET /tags/%20/</h2><p>刚接触hexo博客nexT主题，默认只有首页和归档两个菜单项，为了让菜单栏显得不那么空旷，按照<strong><em><a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93644533" target="_blank" rel="noopener">教程添加分类、标签、关于菜单项</a></em></strong><br>完全按照教程做完之后，点击首页、关于、标签等菜单项，无法跳转到自己想看的界面，会出现如下图显示的界面。<a id="more"></a><img src="2.png" alt="alt"><br>一开始看就感觉是路径问题，而20%是空格的编码。由于之前吃了很多次这种配置文件空格或者中英文标点的问题，就改了主题下的<code>_config.yml</code>配置文件，<strong>把<code>menu</code>中||前的空格去掉</strong>，保存后再次尝试发现果然好了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;|| home</span><br><span class="line">  about: &#x2F;about&#x2F;|| user</span><br><span class="line">  tags: &#x2F;tags&#x2F;|| tags</span><br><span class="line">  categories: &#x2F;categories&#x2F;|| th</span><br><span class="line">  archives: &#x2F;archives&#x2F;|| archive</span><br></pre></td></tr></table></figure></div><p>让人感觉奇怪的点在于这个空格是next主题文件配置里面自带的，所以一出问题总觉得是自己添加菜单项时出了问题，没想过改配置文件，浪费了大量的时间</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hexo中的nexT主题菜单栏选项跳转时出现Cannot-GET-tags-20&quot;&gt;&lt;a href=&quot;#hexo中的nexT主题菜单栏选项跳转时出现Cannot-GET-tags-20&quot; class=&quot;headerlink&quot; title=&quot;hexo中的nexT主题菜单栏选项跳转时出现Cannot GET /tags/%20/&quot;&gt;&lt;/a&gt;hexo中的nexT主题菜单栏选项跳转时出现Cannot GET /tags/%20/&lt;/h2&gt;&lt;p&gt;刚接触hexo博客nexT主题，默认只有首页和归档两个菜单项，为了让菜单栏显得不那么空旷，按照&lt;strong&gt;&lt;em&gt;&lt;a href=&quot;https://blog.csdn.net/mqdxiaoxiao/article/details/93644533&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;教程添加分类、标签、关于菜单项&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;完全按照教程做完之后，点击首页、关于、标签等菜单项，无法跳转到自己想看的界面，会出现如下图显示的界面。
    
    </summary>
    
    
      <category term="Hexo" scheme="http://kuangyuanbin.cn/categories/Hexo/"/>
    
      <category term="nexT" scheme="http://kuangyuanbin.cn/categories/Hexo/nexT/"/>
    
    
      <category term="技术" scheme="http://kuangyuanbin.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="踩坑" scheme="http://kuangyuanbin.cn/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
</feed>
